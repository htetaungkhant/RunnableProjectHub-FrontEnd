{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx\";\nimport React, { Component } from \"react\";\nimport WebsiteUploadForm from \"./WebsiteUploadForm\";\nimport WindowUploadForm from \"./WindowUploadForm\";\nimport AndroidUploadForm from \"./AndroidUploadForm\";\nimport axios from \"axios\";\nimport { Header, Message, TextArea, Checkbox, Button, Form, Select, Input } from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postForm = () => {\n      let formData = new FormData();\n      var data;\n      var key;\n\n      switch (this.state.selectProjectType) {\n        case \"Website\":\n          data = {\n            userName: this.state.userName,\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            language: this.state.selectLanguage,\n            languageVersion: this.state.selectLanguageVersion,\n            projectFiles: this.state.projectFiles,\n            isDbUsed: this.state.dbOnCheck,\n            dbName: this.state.dbLanguage,\n            dbVersion: this.state.dbVersion,\n            dbBackupName: this.state.dbName,\n            dbBackupFile: this.state.dbBackUpFile,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          };\n          Array.from(this.state.projectFiles).forEach(file => {\n            formData.append(\"projectFiles\", file, file.webkitRelativePath);\n          });\n\n          for (key in data) {\n            if (key !== \"projectFiles\") formData.append(key, data[key]);\n          }\n\n          axios({\n            method: \"post\",\n            url: \"http://localhost:8080/upload\",\n            data: formData\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n          break;\n\n        case \"Window Application\":\n          data = {\n            userName: this.state.userName,\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            language: this.state.selectLanguage,\n            languageVersion: this.state.selectLanguageVersion,\n            projectFiles: this.state.projectFiles,\n            isDbUsed: this.state.dbOnCheck,\n            dbName: this.state.dbLanguage,\n            dbVersion: this.state.dbVersion,\n            dbBackupName: this.state.dbName,\n            dbBackupFile: this.state.dbBackUpFile,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          };\n          Array.from(this.state.projectFiles).forEach(file => {\n            formData.append(\"projectFiles\", file, file.webkitRelativePath);\n          });\n\n          for (key in data) {\n            if (key !== \"projectFiles\") formData.append(key, data[key]);\n          }\n\n          axios({\n            method: \"post\",\n            url: \"http://localhost:8080/upload\",\n            data: formData\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n          break;\n\n        case \"Android Application\":\n          data = {\n            userName: this.state.userName,\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            device: this.state.androidDevice,\n            apiVersion: this.state.apiVersion,\n            androidVersion: this.state.androidVersion,\n            projectFiles: this.state.projectFiles,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          };\n          Array.from(this.state.projectFiles).forEach(file => {\n            formData.append(\"projectFiles\", file, file.webkitRelativePath);\n          });\n\n          for (key in data) {\n            if (key !== \"projectFiles\") formData.append(key, data[key]);\n          }\n\n          axios({\n            method: \"post\",\n            url: \"http://localhost:8080/upload\",\n            data: formData\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n          break;\n\n        default:\n      }\n    };\n\n    this.deviceOnChange = value => {\n      this.setState({\n        androidDevice: value\n      });\n    };\n\n    this.androidVersionOnChange = value => {\n      this.setState({\n        androidVersion: value\n      });\n    };\n\n    this.apiVersionOnChange = value => {\n      this.setState({\n        apiVersion: value\n      });\n    };\n\n    this.projectTypeOnChange = (event, data) => {\n      this.setState({\n        selectProjectType: data.value\n      });\n      this.reset();\n      console.log(data.value);\n    };\n\n    this.projectNameOnChange = (event, data) => {\n      this.setState({\n        selectProjectName: event.target.value\n      });\n      console.log(this.state.selectProjectName);\n    };\n\n    this.languageOnChange = value => {\n      this.setState({\n        selectLanguage: value\n      });\n    };\n\n    this.languageVersionOnChange = value => {\n      this.setState({\n        selectLanguageVersion: value\n      });\n    };\n\n    this.projectFilesOnChange = value => {\n      this.setState({\n        projectFiles: value\n      });\n    };\n\n    this.dbOnCheck = value => {\n      this.setState({\n        dbOnCheck: value\n      });\n    };\n\n    this.dbOnChanage = value => {\n      this.setState({\n        dbLanguage: value\n      });\n    };\n\n    this.dbVersionOnChange = value => {\n      this.setState({\n        dbVersion: value\n      });\n    };\n\n    this.dbNameOnChange = value => {\n      this.setState({\n        dbName: value\n      });\n    };\n\n    this.dbBackUpOnChange = value => {\n      this.setState({\n        dbBackUpFile: value\n      });\n    };\n\n    this.descriptionOnChange = (e, data) => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.downloadPermissionOnChange = (e, data) => {\n      this.setState({\n        downloadPermission: data.checked\n      });\n    };\n\n    this.onSubmit = e => {\n      console.log(\"error status on submit :\", this.state.errorStatus);\n      e.preventDefault();\n      this.validateForm();\n      console.log(\"On Submit worked !\");\n      console.log(\"error status after submit:\", this.state.errorStatus);\n    };\n\n    this.validateForm = () => {\n      if (this.state.selectProjectType === \"Website\" || this.state.selectProjectType === \"Window Application\") {\n        if (this.state.selectProjectName === \"\") this.setState({\n          errorStatus: true\n        });else if (this.state.selectLanguage === \"\") this.setState({\n          errorStatus: true\n        });else if (this.state.selectLanguageVersion === \"\") this.setState({\n          errorStatus: true\n        });else if (this.state.projectFiles === null) this.setState({\n          errorStatus: true\n        });else if (this.state.dbOnCheck) {\n          if (this.state.dbName === \"\") this.setState({\n            errorStatus: true\n          });else if (this.state.dbLanguage === \"\") this.setState({\n            errorStatus: true\n          });else if (this.state.dbVersion === \"\") this.setState({\n            errorStatus: true\n          });else if (this.state.dbBackUpFile === null) this.setState({\n            errorStatus: true\n          });else {\n            this.setState({\n              errorStatus: false\n            });\n            console.log(\"posting form\");\n            this.postForm();\n          }\n        } else {\n          this.setState({\n            errorStatus: false\n          });\n          console.log(\"posting form\");\n          this.postForm();\n        }\n      } else if (this.state.selectProjectType === \"Android Application\") {\n        if (this.state.selectProjectName === \"\") this.setState({\n          errorStatus: true\n        });else if (this.state.device === \"\") this.setState({\n          errorStatus: true\n        });else if (this.state.projectFiles === null) this.setState({\n          errorStatus: true\n        });else if (this.state.apiVersion === \"\") this.setState({\n          errorStatus: true\n        });else if (this.state.androidVersion === \"\") this.setState({\n          errorStatus: true\n        });else {\n          this.setState({\n            errorStatus: false\n          });\n          console.log(\"posting form\");\n          this.postForm();\n        }\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        selectLanguage: \"\",\n        selectLanguageVersion: \"\",\n        projectFiles: null,\n        dbOnCheck: false,\n        dbLanguage: \"\",\n        dbVersion: \"\",\n        dbBackUpFile: null,\n        description: \"\",\n        downloadPermission: false,\n        androidDevice: \"\",\n        apiVersion: \"\",\n        androidVersion: \"\"\n      });\n    };\n\n    this.state = {\n      loading: true,\n      projects: null,\n      projectTypes: \"\",\n      userName: \"koko\",\n      selectProjectType: \"\",\n      selectProjectName: \"\",\n      selectLanguage: \"\",\n      selectLanguageVersion: \"\",\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: \"\",\n      dbVersion: \"\",\n      dbName: \"\",\n      dbBackUpFile: null,\n      description: \"\",\n      downloadPermission: false,\n      androidDevice: \"\",\n      apiVersion: \"\",\n      androidVersion: \"\",\n      errorStatus: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/supportLanguage\").then(response => {\n      // handle success\n      const pj = response.data;\n      this.setState({\n        loading: false,\n        projects: pj,\n        projectTypes: pj.projects.map(project => {\n          return {\n            text: project.projectType,\n            value: project.projectType\n          };\n        }),\n        selectProjectType: \"Website\"\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(\"after render :\", this.state.errorStatus);\n    console.log(\"current state:\", this.state); //error message\n\n    let showErrorMessage = null;\n\n    if (this.state.errorStatus) {\n      showErrorMessage = React.createElement(Message, {\n        error: true,\n        header: \"Failed to Submit ! Incomplete Form !\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      });\n    } else {\n      showErrorMessage = null;\n    }\n\n    let uploadform;\n\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        uploadform = React.createElement(WebsiteUploadForm, {\n          projectDetail: this.state.projects,\n          languageOnChange: this.languageOnChange,\n          languageVersionOnChange: this.languageVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          dbOnCheck: this.dbOnCheck,\n          dbOnChange: this.dbOnChanage,\n          dbNameOnChange: this.dbNameOnChange,\n          dbVersionOnChange: this.dbVersionOnChange,\n          dbBackUpOnChange: this.dbBackUpOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        });\n        break;\n\n      case \"Window Application\":\n        uploadform = React.createElement(WindowUploadForm, {\n          projectDetail: this.state.projects,\n          languageOnChange: this.languageOnChange,\n          languageVersionOnChange: this.languageVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          dbOnCheck: this.dbOnCheck,\n          dbOnChange: this.dbOnChanage,\n          dbNameOnChange: this.dbNameOnChange,\n          dbVersionOnChange: this.dbVersionOnChange,\n          dbBackUpOnChange: this.dbBackUpOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        });\n        break;\n\n      case \"Android Application\":\n        uploadform = React.createElement(AndroidUploadForm, {\n          projectDetail: this.state.projects,\n          deviceOnChange: this.deviceOnChange,\n          apiVersionOnChange: this.apiVersionOnChange,\n          androidVersionOnChange: this.androidVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        });\n        break;\n\n      default:\n    }\n\n    return React.createElement(\"div\", {\n      className: \"uploadForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"Upload your project\"), showErrorMessage, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      label: \"Project Type\",\n      options: this.state.projectTypes,\n      placeholder: \"Project Type\",\n      onChange: this.projectTypeOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      inline: true,\n      fluid: true,\n      control: Input,\n      label: \"Project Name\",\n      placeholder: \"Name\",\n      onChange: this.projectNameOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }), uploadform, React.createElement(Form.Field, {\n      control: TextArea,\n      label: \"Description\",\n      placeholder: \"Tell something about your project ...\",\n      onChange: this.descriptionOnChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Checkbox,\n      label: \"Allow download\",\n      onChange: this.downloadPermissionOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx"],"names":["React","Component","WebsiteUploadForm","WindowUploadForm","AndroidUploadForm","axios","Header","Message","TextArea","Checkbox","Button","Form","Select","Input","Upload","constructor","props","postForm","formData","FormData","data","key","state","selectProjectType","userName","projectType","projectName","selectProjectName","language","selectLanguage","languageVersion","selectLanguageVersion","projectFiles","isDbUsed","dbOnCheck","dbName","dbLanguage","dbVersion","dbBackupName","dbBackupFile","dbBackUpFile","description","downloadPermission","Array","from","forEach","file","append","webkitRelativePath","method","url","then","response","console","log","catch","error","device","androidDevice","apiVersion","androidVersion","deviceOnChange","value","setState","androidVersionOnChange","apiVersionOnChange","projectTypeOnChange","event","reset","projectNameOnChange","target","languageOnChange","languageVersionOnChange","projectFilesOnChange","dbOnChanage","dbVersionOnChange","dbNameOnChange","dbBackUpOnChange","descriptionOnChange","e","downloadPermissionOnChange","checked","onSubmit","errorStatus","preventDefault","validateForm","loading","projects","projectTypes","componentDidMount","get","pj","map","project","text","render","showErrorMessage","uploadform"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport WebsiteUploadForm from \"./WebsiteUploadForm\";\nimport WindowUploadForm from \"./WindowUploadForm\";\nimport AndroidUploadForm from \"./AndroidUploadForm\";\nimport axios from \"axios\";\nimport {\n  Header,\n  Message,\n  TextArea,\n  Checkbox,\n  Button,\n  Form,\n  Select,\n  Input\n} from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      projects: null,\n      projectTypes: \"\",\n      userName: \"koko\",\n      selectProjectType: \"\",\n      selectProjectName: \"\",\n      selectLanguage: \"\",\n      selectLanguageVersion: \"\",\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: \"\",\n      dbVersion: \"\",\n      dbName: \"\",\n      dbBackUpFile: null,\n      description: \"\",\n      downloadPermission: false,\n      androidDevice: \"\",\n      apiVersion: \"\",\n      androidVersion: \"\",\n      errorStatus: false\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:8080/supportLanguage\")\n      .then(response => {\n        // handle success\n        const pj = response.data;\n        this.setState({\n          loading: false,\n          projects: pj,\n          projectTypes: pj.projects.map(project => {\n            return { text: project.projectType, value: project.projectType };\n          }),\n          selectProjectType: \"Website\"\n        });\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      });\n  }\n\n  postForm = () => {\n    let formData = new FormData();\n    var data;\n    var key;\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        data = {\n          userName: this.state.userName,\n          projectType: this.state.selectProjectType,\n          projectName: this.state.selectProjectName,\n          language: this.state.selectLanguage,\n          languageVersion: this.state.selectLanguageVersion,\n          projectFiles: this.state.projectFiles,\n          isDbUsed: this.state.dbOnCheck,\n          dbName: this.state.dbLanguage,\n          dbVersion: this.state.dbVersion,\n          dbBackupName: this.state.dbName,\n          dbBackupFile: this.state.dbBackUpFile,\n          description: this.state.description,\n          downloadPermission: this.state.downloadPermission\n        };\n\n        Array.from(this.state.projectFiles).forEach(file => {\n          formData.append(\"projectFiles\", file, file.webkitRelativePath);\n        });\n        for (key in data) {\n          if (key !== \"projectFiles\") formData.append(key, data[key]);\n        }\n        axios({\n          method: \"post\",\n          url: \"http://localhost:8080/upload\",\n          data: formData\n        })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n        break;\n      case \"Window Application\":\n        data = {\n          userName: this.state.userName,\n          projectType: this.state.selectProjectType,\n          projectName: this.state.selectProjectName,\n          language: this.state.selectLanguage,\n          languageVersion: this.state.selectLanguageVersion,\n          projectFiles: this.state.projectFiles,\n          isDbUsed: this.state.dbOnCheck,\n          dbName: this.state.dbLanguage,\n          dbVersion: this.state.dbVersion,\n          dbBackupName: this.state.dbName,\n          dbBackupFile: this.state.dbBackUpFile,\n          description: this.state.description,\n          downloadPermission: this.state.downloadPermission\n        };\n\n        Array.from(this.state.projectFiles).forEach(file => {\n          formData.append(\"projectFiles\", file, file.webkitRelativePath);\n        });\n        for (key in data) {\n          if (key !== \"projectFiles\") formData.append(key, data[key]);\n        }\n        axios({\n          method: \"post\",\n          url: \"http://localhost:8080/upload\",\n          data: formData\n        })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n        break;\n      case \"Android Application\":\n        data = {\n          userName: this.state.userName,\n          projectType: this.state.selectProjectType,\n          projectName: this.state.selectProjectName,\n          device: this.state.androidDevice,\n          apiVersion: this.state.apiVersion,\n          androidVersion: this.state.androidVersion,\n          projectFiles: this.state.projectFiles,\n          description: this.state.description,\n          downloadPermission: this.state.downloadPermission\n        };\n        Array.from(this.state.projectFiles).forEach(file => {\n          formData.append(\"projectFiles\", file, file.webkitRelativePath);\n        });\n        for (key in data) {\n          if (key !== \"projectFiles\") formData.append(key, data[key]);\n        }\n\n        axios({\n          method: \"post\",\n          url: \"http://localhost:8080/upload\",\n          data: formData\n        })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n        break;\n      default:\n    }\n  };\n\n  deviceOnChange = value => {\n    this.setState({ androidDevice: value });\n  };\n\n  androidVersionOnChange = value => {\n    this.setState({ androidVersion: value });\n  };\n\n  apiVersionOnChange = value => {\n    this.setState({ apiVersion: value });\n  };\n\n  projectTypeOnChange = (event, data) => {\n    this.setState({ selectProjectType: data.value });\n    this.reset();\n    console.log(data.value);\n  };\n\n  projectNameOnChange = (event, data) => {\n    this.setState({ selectProjectName: event.target.value });\n    console.log(this.state.selectProjectName);\n  };\n\n  languageOnChange = value => {\n    this.setState({ selectLanguage: value });\n  };\n\n  languageVersionOnChange = value => {\n    this.setState({ selectLanguageVersion: value });\n  };\n\n  projectFilesOnChange = value => {\n    this.setState({ projectFiles: value });\n  };\n\n  dbOnCheck = value => {\n    this.setState({ dbOnCheck: value });\n  };\n\n  dbOnChanage = value => {\n    this.setState({ dbLanguage: value });\n  };\n\n  dbVersionOnChange = value => {\n    this.setState({ dbVersion: value });\n  };\n\n  dbNameOnChange = value => {\n    this.setState({ dbName: value });\n  };\n\n  dbBackUpOnChange = value => {\n    this.setState({ dbBackUpFile: value });\n  };\n\n  descriptionOnChange = (e, data) => {\n    this.setState({ description: e.target.value });\n  };\n\n  downloadPermissionOnChange = (e, data) => {\n    this.setState({ downloadPermission: data.checked });\n  };\n\n  onSubmit = e => {\n    console.log(\"error status on submit :\", this.state.errorStatus);\n    e.preventDefault();\n    this.validateForm();\n    console.log(\"On Submit worked !\");\n    console.log(\"error status after submit:\", this.state.errorStatus);\n  };\n\n  validateForm = () => {\n    if (\n      this.state.selectProjectType === \"Website\" ||\n      this.state.selectProjectType === \"Window Application\"\n    ) {\n      if (this.state.selectProjectName === \"\")\n        this.setState({ errorStatus: true });\n      else if (this.state.selectLanguage === \"\")\n        this.setState({ errorStatus: true });\n      else if (this.state.selectLanguageVersion === \"\")\n        this.setState({ errorStatus: true });\n      else if (this.state.projectFiles === null)\n        this.setState({ errorStatus: true });\n      else if (this.state.dbOnCheck) {\n        if (this.state.dbName === \"\") this.setState({ errorStatus: true });\n        else if (this.state.dbLanguage === \"\")\n          this.setState({ errorStatus: true });\n        else if (this.state.dbVersion === \"\")\n          this.setState({ errorStatus: true });\n        else if (this.state.dbBackUpFile === null)\n          this.setState({ errorStatus: true });\n        else {\n          this.setState({ errorStatus: false });\n          console.log(\"posting form\");\n          this.postForm();\n        }\n      } else {\n        this.setState({ errorStatus: false });\n        console.log(\"posting form\");\n        this.postForm();\n      }\n    } else if (this.state.selectProjectType === \"Android Application\") {\n      if (this.state.selectProjectName === \"\")\n        this.setState({ errorStatus: true });\n      else if (this.state.device === \"\") this.setState({ errorStatus: true });\n      else if (this.state.projectFiles === null)\n        this.setState({ errorStatus: true });\n      else if (this.state.apiVersion === \"\")\n        this.setState({ errorStatus: true });\n      else if (this.state.androidVersion === \"\")\n        this.setState({ errorStatus: true });\n      else {\n        this.setState({ errorStatus: false });\n        console.log(\"posting form\");\n        this.postForm();\n      }\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      selectLanguage: \"\",\n      selectLanguageVersion: \"\",\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: \"\",\n      dbVersion: \"\",\n      dbBackUpFile: null,\n      description: \"\",\n      downloadPermission: false,\n      androidDevice: \"\",\n      apiVersion: \"\",\n      androidVersion: \"\"\n    });\n  };\n\n  render() {\n    console.log(\"after render :\", this.state.errorStatus);\n    console.log(\"current state:\", this.state);\n    //error message\n    let showErrorMessage = null;\n    if (this.state.errorStatus) {\n      showErrorMessage = (\n        <Message error header=\"Failed to Submit ! Incomplete Form !\" />\n      );\n    } else {\n      showErrorMessage = null;\n    }\n\n    let uploadform;\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        uploadform = (\n          <WebsiteUploadForm\n            projectDetail={this.state.projects}\n            languageOnChange={this.languageOnChange}\n            languageVersionOnChange={this.languageVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n            dbOnCheck={this.dbOnCheck}\n            dbOnChange={this.dbOnChanage}\n            dbNameOnChange={this.dbNameOnChange}\n            dbVersionOnChange={this.dbVersionOnChange}\n            dbBackUpOnChange={this.dbBackUpOnChange}\n          />\n        );\n        break;\n      case \"Window Application\":\n        uploadform = (\n          <WindowUploadForm\n            projectDetail={this.state.projects}\n            languageOnChange={this.languageOnChange}\n            languageVersionOnChange={this.languageVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n            dbOnCheck={this.dbOnCheck}\n            dbOnChange={this.dbOnChanage}\n            dbNameOnChange={this.dbNameOnChange}\n            dbVersionOnChange={this.dbVersionOnChange}\n            dbBackUpOnChange={this.dbBackUpOnChange}\n          />\n        );\n        break;\n      case \"Android Application\":\n        uploadform = (\n          <AndroidUploadForm\n            projectDetail={this.state.projects}\n            deviceOnChange={this.deviceOnChange}\n            apiVersionOnChange={this.apiVersionOnChange}\n            androidVersionOnChange={this.androidVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n          />\n        );\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"uploadForm\">\n        <Header as=\"h2\" textAlign=\"center\">\n          Upload your project\n        </Header>\n\n        {showErrorMessage}\n        <Form onSubmit={this.onSubmit}>\n          <Form.Field\n            fluid\n            control={Select}\n            label=\"Project Type\"\n            options={this.state.projectTypes}\n            placeholder=\"Project Type\"\n            onChange={this.projectTypeOnChange}\n          />\n          <Form.Field\n            inline\n            fluid\n            control={Input}\n            label=\"Project Name\"\n            placeholder=\"Name\"\n            onChange={this.projectNameOnChange}\n          />\n          {uploadform}\n          <Form.Field\n            control={TextArea}\n            label=\"Description\"\n            placeholder=\"Tell something about your project ...\"\n            onChange={this.descriptionOnChange}\n            required\n          />\n          <Form.Field\n            control={Checkbox}\n            label=\"Allow download\"\n            onChange={this.downloadPermissionOnChange}\n          />\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}