{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/AndroidUploadForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Checkbox, Form, Select } from \"semantic-ui-react\";\n\nclass AndroidUploadForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.projectFilesOnChange = (event, data) => {\n      this.props.projectFilesOnChange(event.target.files);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const detail = this.props.projectDetail; //extract android information\n\n    const deviceOption = detail.device.map(v => {\n      return {\n        text: v,\n        value: v\n      };\n    });\n    const androidVersion = detail.androidVersion.map(v => {\n      return {\n        text: v,\n        value: v\n      };\n    });\n    const apiVersion = detail.apiVersion.map(v => {\n      return {\n        text: v,\n        value: v\n      };\n    });\n    let versionOption = null;\n\n    if (version.length > 0) {\n      versionOption = version[0].version.map(v => {\n        return {\n          text: v,\n          value: v\n        };\n      });\n    } //extract supported Language from webInfo (\n\n\n    const languageOption = webDetail[0].language.map(language => {\n      return {\n        text: language.name,\n        value: language.name\n      };\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: languageOption,\n      label: \"language\",\n      placeholder: \"Language\",\n      onChange: this.languageOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: versionOption,\n      label: \"version\",\n      placeholder: \"Version\",\n      onChange: this.languageVersionOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Application File\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.projectFilesOnChange,\n      accept: \".jar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default AndroidUploadForm;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/AndroidUploadForm.jsx"],"names":["React","Component","Checkbox","Form","Select","AndroidUploadForm","constructor","props","projectFilesOnChange","event","data","target","files","state","render","detail","projectDetail","deviceOption","device","map","v","text","value","androidVersion","apiVersion","versionOption","version","length","languageOption","webDetail","language","name","languageOnChange","languageVersionOnChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Checkbox, Form, Select } from \"semantic-ui-react\";\n\nclass AndroidUploadForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  projectFilesOnChange = (event, data) => {\n    this.props.projectFilesOnChange(event.target.files);\n  };\n\n  render() {\n    const detail = this.props.projectDetail;\n\n    //extract android information\n    const deviceOption = detail.device.map(v => {\n      return { text: v, value: v };\n    });\n\n    const androidVersion = detail.androidVersion.map(v => {\n      return { text: v, value: v };\n    });\n\n    const apiVersion = detail.apiVersion.map(v => {\n      return { text: v, value: v };\n    });\n\n    let versionOption = null;\n    if (version.length > 0) {\n      versionOption = version[0].version.map(v => {\n        return { text: v, value: v };\n      });\n    }\n\n    //extract supported Language from webInfo (\n    const languageOption = webDetail[0].language.map(language => {\n      return { text: language.name, value: language.name };\n    });\n\n    return (\n      <React.Fragment>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            fluid\n            control={Select}\n            options={languageOption}\n            label=\"language\"\n            placeholder=\"Language\"\n            onChange={this.languageOnChange}\n          />\n          <Form.Field\n            fluid\n            control={Select}\n            options={versionOption}\n            label=\"version\"\n            placeholder=\"Version\"\n            onChange={this.languageVersionOnChange}\n          />\n          <Form.Field>\n            <label> Application File</label>\n            <input\n              type=\"file\"\n              onChange={this.projectFilesOnChange}\n              accept=\".jar\"\n            />\n          </Form.Field>\n        </Form.Group>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AndroidUploadForm;\n"]},"metadata":{},"sourceType":"module"}