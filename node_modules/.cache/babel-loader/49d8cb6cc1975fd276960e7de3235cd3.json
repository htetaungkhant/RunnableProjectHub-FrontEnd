{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/WebsiteUploadForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Checkbox, Button, Form, Select, Input, TextArea, Divider } from \"semantic-ui-react\";\n\nclass WebsiteUploadForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.languageOnChange = (event, data) => {\n      this.setState({\n        selectedLanguage: data.value\n      });\n    };\n\n    this.onCheckChange = (e, data) => {\n      this.setState({\n        databaseChecked: data.checked\n      });\n    };\n\n    this.state = {\n      selectedLanguage: null,\n      databaseChecked: false\n    };\n  }\n\n  render() {\n    const detail = this.props.projectDetail; //extract website information\n\n    const webDetail = detail.projects.filter(project => {\n      return project.projectType === \"Website\";\n    }); //extract supported language version from webInfo\n\n    console.log(webDetail);\n    const version = webDetail[0].language.filter(language => {\n      return language.name === this.state.selectedLanguage;\n    });\n    let versionOption = null;\n\n    if (version.length > 0) {\n      versionOption = version[0].version.map(v => {\n        return {\n          text: v,\n          value: v\n        };\n      });\n    } //extract supported Language from webInfo\n\n\n    const languageOption = webDetail[0].language.map(language => {\n      return {\n        text: language.name,\n        value: language.name\n      };\n    }); //extract supported Database from webInfo\n\n    const databaseOption = detail.database.map(db => {\n      return {\n        text: db.name,\n        value: db.name\n      };\n    }); //extract supported Database version from webInfo\n\n    const dbVersionOption = detail.database[0].version.map(v => {\n      return {\n        text: v,\n        value: v\n      };\n    });\n\n    const dbComponent = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        fluid: true,\n        control: Select,\n        placeholder: \"Database\",\n        options: databaseOption,\n        width: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        fluid: true,\n        control: Select,\n        placeholder: \"Version\",\n        options: dbVersionOption,\n        width: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        control: \"input\",\n        label: \"Database backup file\",\n        type: \"file\",\n        accept: \".sql\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    };\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: languageOption,\n      label: \"language\",\n      placeholder: \"Language\",\n      onChange: this.languageOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: versionOption,\n      label: \"version\",\n      placeholder: \"Version\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" Project Files\"), React.createElement(\"input\", {\n      directory: \"\",\n      webkitdirectory: \"\",\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(Form.Field, {\n      control: Checkbox,\n      label: \"check to upload database\",\n      onChange: this.onCheckChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), this.state.databaseChecked && dbComponent);\n  }\n\n}\n\nexport default WebsiteUploadForm;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/WebsiteUploadForm.jsx"],"names":["React","Component","Checkbox","Button","Form","Select","Input","TextArea","Divider","WebsiteUploadForm","constructor","props","languageOnChange","event","data","setState","selectedLanguage","value","onCheckChange","e","databaseChecked","checked","state","render","detail","projectDetail","webDetail","projects","filter","project","projectType","console","log","version","language","name","versionOption","length","map","v","text","languageOption","databaseOption","database","db","dbVersionOption","dbComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,QADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,OAPF,QAQO,mBARP;;AAUA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AACxCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,gBARmB,GAQA,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAClC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAEF,IAAI,CAACG;AAAzB,OAAd;AACD,KAVkB;;AAAA,SAYnBC,aAZmB,GAYH,CAACC,CAAD,EAAIL,IAAJ,KAAa;AAC3B,WAAKC,QAAL,CAAc;AAAEK,QAAAA,eAAe,EAAEN,IAAI,CAACO;AAAxB,OAAd;AACD,KAdkB;;AAEjB,SAAKC,KAAL,GAAa;AACXN,MAAAA,gBAAgB,EAAE,IADP;AAEXI,MAAAA,eAAe,EAAE;AAFN,KAAb;AAID;;AAUDG,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKb,KAAL,CAAWc,aAA1B,CADO,CAGP;;AACA,UAAMC,SAAS,GAAGF,MAAM,CAACG,QAAP,CAAgBC,MAAhB,CAAuBC,OAAO,IAAI;AAClD,aAAOA,OAAO,CAACC,WAAR,KAAwB,SAA/B;AACD,KAFiB,CAAlB,CAJO,CAOP;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,UAAMO,OAAO,GAAGP,SAAS,CAAC,CAAD,CAAT,CAAaQ,QAAb,CAAsBN,MAAtB,CAA6BM,QAAQ,IAAI;AACvD,aAAOA,QAAQ,CAACC,IAAT,KAAkB,KAAKb,KAAL,CAAWN,gBAApC;AACD,KAFe,CAAhB;AAGA,QAAIoB,aAAa,GAAG,IAApB;;AACA,QAAIH,OAAO,CAACI,MAAR,GAAiB,CAArB,EAAwB;AACtBD,MAAAA,aAAa,GAAGH,OAAO,CAAC,CAAD,CAAP,CAAWA,OAAX,CAAmBK,GAAnB,CAAuBC,CAAC,IAAI;AAC1C,eAAO;AAAEC,UAAAA,IAAI,EAAED,CAAR;AAAWtB,UAAAA,KAAK,EAAEsB;AAAlB,SAAP;AACD,OAFe,CAAhB;AAGD,KAjBM,CAmBP;;;AACA,UAAME,cAAc,GAAGf,SAAS,CAAC,CAAD,CAAT,CAAaQ,QAAb,CAAsBI,GAAtB,CAA0BJ,QAAQ,IAAI;AAC3D,aAAO;AAAEM,QAAAA,IAAI,EAAEN,QAAQ,CAACC,IAAjB;AAAuBlB,QAAAA,KAAK,EAAEiB,QAAQ,CAACC;AAAvC,OAAP;AACD,KAFsB,CAAvB,CApBO,CAwBP;;AACA,UAAMO,cAAc,GAAGlB,MAAM,CAACmB,QAAP,CAAgBL,GAAhB,CAAoBM,EAAE,IAAI;AAC/C,aAAO;AAAEJ,QAAAA,IAAI,EAAEI,EAAE,CAACT,IAAX;AAAiBlB,QAAAA,KAAK,EAAE2B,EAAE,CAACT;AAA3B,OAAP;AACD,KAFsB,CAAvB,CAzBO,CA6BP;;AACA,UAAMU,eAAe,GAAGrB,MAAM,CAACmB,QAAP,CAAgB,CAAhB,EAAmBV,OAAnB,CAA2BK,GAA3B,CAA+BC,CAAC,IAAI;AAC1D,aAAO;AAAEC,QAAAA,IAAI,EAAED,CAAR;AAAWtB,QAAAA,KAAK,EAAEsB;AAAlB,OAAP;AACD,KAFuB,CAAxB;;AAIA,UAAMO,WAAW,GAAG,MAAM;AACxB,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,MADP;AAEE,QAAA,OAAO,EAAEzC,MAFX;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,OAAO,EAAEqC,cAJX;AAKE,QAAA,KAAK,EAAE,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,MADP;AAEE,QAAA,OAAO,EAAErC,MAFX;AAGE,QAAA,WAAW,EAAC,SAHd;AAIE,QAAA,OAAO,EAAEwC,eAJX;AAKE,QAAA,KAAK,EAAE,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,EAkBE,oBAAC,IAAD,CAAM,KAAN;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,KAAK,EAAC,sBAFR;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,MAAM,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,CADF;AA2BD,KA5BD;;AA6BA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,OAAO,EAAExC,MAFX;AAGE,MAAA,OAAO,EAAEoC,cAHX;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,WAAW,EAAC,UALd;AAME,MAAA,QAAQ,EAAE,KAAK7B,gBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,OAAO,EAAEP,MAFX;AAGE,MAAA,OAAO,EAAE+B,aAHX;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,WAAW,EAAC,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAgBE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAO,MAAA,SAAS,EAAC,EAAjB;AAAoB,MAAA,eAAe,EAAC,EAApC;AAAuC,MAAA,IAAI,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAhBF,CADF,EAsBE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,OAAO,EAAElC,QADX;AAEE,MAAA,KAAK,EAAC,0BAFR;AAGE,MAAA,QAAQ,EAAE,KAAKgB,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EA2BG,KAAKI,KAAL,CAAWF,eAAX,IAA8B0B,WA3BjC,CADF;AA+BD;;AA/GuC;;AAkH1C,eAAerC,iBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Checkbox,\n  Button,\n  Form,\n  Select,\n  Input,\n  TextArea,\n  Divider\n} from \"semantic-ui-react\";\n\nclass WebsiteUploadForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedLanguage: null,\n      databaseChecked: false\n    };\n  }\n\n  languageOnChange = (event, data) => {\n    this.setState({ selectedLanguage: data.value });\n  };\n\n  onCheckChange = (e, data) => {\n    this.setState({ databaseChecked: data.checked });\n  };\n\n  render() {\n    const detail = this.props.projectDetail;\n\n    //extract website information\n    const webDetail = detail.projects.filter(project => {\n      return project.projectType === \"Website\";\n    });\n    //extract supported language version from webInfo\n    console.log(webDetail);\n    const version = webDetail[0].language.filter(language => {\n      return language.name === this.state.selectedLanguage;\n    });\n    let versionOption = null;\n    if (version.length > 0) {\n      versionOption = version[0].version.map(v => {\n        return { text: v, value: v };\n      });\n    }\n\n    //extract supported Language from webInfo\n    const languageOption = webDetail[0].language.map(language => {\n      return { text: language.name, value: language.name };\n    });\n\n    //extract supported Database from webInfo\n    const databaseOption = detail.database.map(db => {\n      return { text: db.name, value: db.name };\n    });\n\n    //extract supported Database version from webInfo\n    const dbVersionOption = detail.database[0].version.map(v => {\n      return { text: v, value: v };\n    });\n\n    const dbComponent = () => {\n      return (\n        <React.Fragment>\n          <Form.Group>\n            <Form.Field\n              fluid\n              control={Select}\n              placeholder=\"Database\"\n              options={databaseOption}\n              width={4}\n            />\n            <Form.Field\n              fluid\n              control={Select}\n              placeholder=\"Version\"\n              options={dbVersionOption}\n              width={4}\n            />\n          </Form.Group>\n\n          <Form.Field\n            control=\"input\"\n            label=\"Database backup file\"\n            type=\"file\"\n            accept=\".sql\"\n          />\n        </React.Fragment>\n      );\n    };\n    return (\n      <React.Fragment>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            fluid\n            control={Select}\n            options={languageOption}\n            label=\"language\"\n            placeholder=\"Language\"\n            onChange={this.languageOnChange}\n          />\n          <Form.Field\n            fluid\n            control={Select}\n            options={versionOption}\n            label=\"version\"\n            placeholder=\"Version\"\n          />\n          <Form.Field>\n            <label> Project Files</label>\n            <input directory=\"\" webkitdirectory=\"\" type=\"file\" />\n          </Form.Field>\n        </Form.Group>\n        <Form.Field\n          control={Checkbox}\n          label=\"check to upload database\"\n          onChange={this.onCheckChange}\n        />\n        {this.state.databaseChecked && dbComponent}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WebsiteUploadForm;\n"]},"metadata":{},"sourceType":"module"}