{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/AndroidUploadForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Checkbox, Button, Form, Select, Input, TextArea, Divider } from \"semantic-ui-react\";\n\nclass AndroidUploadForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const options = [{\n      text: \"Website\",\n      value: \"website\"\n    }, {\n      text: \"Window Application\",\n      value: \"window application\"\n    }, {\n      text: \"Android Application\",\n      value: \"android application\"\n    }];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \" Upload Project Files\"), React.createElement(\"input\", {\n      directory: \"\",\n      webkitdirectory: \"\",\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: options,\n      label: \"Language\",\n      placeholder: \"title\",\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: options,\n      label: \"Version\",\n      placeholder: \"title\",\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      control: Checkbox,\n      label: \"check to upload database\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      label: \"Device\",\n      placeholder: \"device\",\n      options: options,\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      label: \"Android-version\",\n      placeholder: \"x.xxx\",\n      options: options,\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      label: \"API-version\",\n      placeholder: \"x.xxx\",\n      options: options,\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: \"input\",\n      label: \"Database backup file\",\n      type: \"file\",\n      accept: \".sql\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AndroidUploadForm;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/AndroidUploadForm.jsx"],"names":["React","Component","Checkbox","Button","Form","Select","Input","TextArea","Divider","AndroidUploadForm","state","render","options","text","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Checkbox,\n  Button,\n  Form,\n  Select,\n  Input,\n  TextArea,\n  Divider\n} from \"semantic-ui-react\";\n\nclass AndroidUploadForm extends Component {\n  state = {};\n\n  render() {\n    const options = [\n      { text: \"Website\", value: \"website\" },\n      {\n        text: \"Window Application\",\n        value: \"window application\"\n      },\n      { text: \"Android Application\", value: \"android application\" }\n    ];\n    return (\n      <React.Fragment>\n        <Form.Field>\n          <label> Upload Project Files</label>\n          <input directory=\"\" webkitdirectory=\"\" type=\"file\" />\n        </Form.Field>\n        <Form.Group>\n          <Form.Field\n            fluid\n            control={Select}\n            options={options}\n            label=\"Language\"\n            placeholder=\"title\"\n            width={4}\n          />\n          <Form.Field\n            fluid\n            control={Select}\n            options={options}\n            label=\"Version\"\n            placeholder=\"title\"\n            width={4}\n          />\n        </Form.Group>\n        <Form.Field control={Checkbox} label=\"check to upload database\" />\n        <Form.Field\n          fluid\n          control={Select}\n          label=\"Device\"\n          placeholder=\"device\"\n          options={options}\n          width={4}\n        />\n        <Form.Field\n          fluid\n          control={Select}\n          label=\"Android-version\"\n          placeholder=\"x.xxx\"\n          options={options}\n          width={4}\n        />\n        <Form.Field\n          fluid\n          control={Select}\n          label=\"API-version\"\n          placeholder=\"x.xxx\"\n          options={options}\n          width={4}\n        />\n        <Form.Field\n          control=\"input\"\n          label=\"Database backup file\"\n          type=\"file\"\n          accept=\".sql\"\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AndroidUploadForm;\n"]},"metadata":{},"sourceType":"module"}