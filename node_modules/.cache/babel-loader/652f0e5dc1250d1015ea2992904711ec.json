{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/Projects.jsx\";\nimport React, { Component } from \"react\";\nimport { Input, Select, Item, Button, Icon, Message, Label, Form, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.projectTypeOnChange = (event, data) => {\n      switch (data.value) {\n        case \"Website\":\n          this.setState({\n            languageOptions: [{\n              text: \"All\",\n              value: \"All\"\n            }, {\n              text: \"PHP\",\n              value: \"PHP\"\n            }, {\n              text: \"HTML\",\n              value: \"HTML\"\n            }]\n          });\n          break;\n\n        case \"Window Application\":\n          this.setState({\n            languageOptions: [{\n              text: \"All\",\n              value: \"All\"\n            }, {\n              text: \"JAVA\",\n              value: \"JAVA\"\n            }]\n          });\n          break;\n\n        case \"Android Appliation\":\n          this.setState({\n            languageOptions: [{\n              text: \"All\",\n              value: \"All\"\n            }]\n          });\n          break;\n\n        default:\n      }\n    };\n\n    this.searchOnChange = e => {\n      this.setState({\n        pattern: e.target.value\n      });\n      console.log(e.target.value);\n    };\n\n    this.searchOnClick = e => {\n      console.log(\"clicked .\");\n    };\n\n    this.filterDate = date => {\n      var today = new Date();\n      var diff = Math.floor((Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) - date.UTC(date.getFullYear(), date.getMonth(), date.getDate())) / (1000 * 60 * 60 * 24));\n      console.log(\"diff :\", diff);\n    };\n\n    this.state = {\n      pattern: \"\",\n      projectType: \"\",\n      language: \"\",\n      languageOptions: [{\n        text: \"All\",\n        value: \"All\"\n      }, {\n        text: \"PHP\",\n        value: \"PHP\"\n      }, {\n        text: \"HTML\",\n        value: \"HTML\"\n      }, {\n        text: \"JAVA\",\n        value: \"JAVA\"\n      }],\n      projects: []\n    };\n  }\n\n  componentDidMount() {\n    let data = {};\n    if (this.state.pattern !== \"\" && this.state.pattern !== \"All\") data[\"pattern\"] = this.state.pattern;\n    if (this.state.language !== \"\" && this.state.language !== \"ALL\") data[\"language\"] = this.state.language;\n    if (this.state.projectType !== \"\" && this.state.projectType !== \"ALL\") data[\"projectType\"] = this.state.projectType;\n    axios({\n      method: \"get\",\n      url: \"http://localhost:8080/project\",\n      params: data\n    }).then(response => {\n      this.setState({\n        projects: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(\"projects:\", this.state.projects);\n    const items = this.state.projects.map(project => {\n      console.log(this.filterDate(project.createdDate));\n      console.log(\"project\", project);\n      return React.createElement(Item, {\n        key: project.ProjectName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Item.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Item.Header, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, project.ProjectName), React.createElement(Item.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" by \", project.username)), React.createElement(Item.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, project.description), React.createElement(Item.Extra, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        floated: \"right\",\n        icon: \"play\",\n        color: \"twitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(Button, {\n        floated: \"right\",\n        icon: \"download\",\n        color: \"twitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, project.ProjectType), React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, project.Language))));\n    });\n    const projectTypeOptions = [{\n      text: \"All\",\n      value: \"All\"\n    }, {\n      text: \"Website\",\n      value: \"Website\"\n    }, {\n      text: \"Window Application\",\n      value: \"Window Application\"\n    }, {\n      text: \"Android\",\n      value: \"Android\"\n    }];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      clearing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Search...\",\n      onChange: this.searchOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Button, {\n      content: \"Search\",\n      onClick: this.searchOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"padd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Select, {\n      placeholder: \"Project Type\",\n      options: projectTypeOptions,\n      onChange: this.projectTypeOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"padd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Select, {\n      placeholder: \"Language\",\n      options: this.state.languageOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Item.Group, {\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, items))));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/Projects.jsx"],"names":["React","Component","Input","Select","Item","Button","Icon","Message","Label","Form","Segment","axios","Projects","constructor","props","projectTypeOnChange","event","data","value","setState","languageOptions","text","searchOnChange","e","pattern","target","console","log","searchOnClick","filterDate","date","today","Date","diff","Math","floor","UTC","getFullYear","getMonth","getDate","state","projectType","language","projects","componentDidMount","method","url","params","then","response","catch","error","render","items","map","project","createdDate","ProjectName","username","description","ProjectType","Language","projectTypeOptions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Input,\n  Select,\n  Item,\n  Button,\n  Icon,\n  Message,\n  Label,\n  Form,\n  Segment\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pattern: \"\",\n      projectType: \"\",\n      language: \"\",\n      languageOptions: [\n        { text: \"All\", value: \"All\" },\n        { text: \"PHP\", value: \"PHP\" },\n        { text: \"HTML\", value: \"HTML\" },\n        { text: \"JAVA\", value: \"JAVA\" }\n      ],\n      projects: []\n    };\n  }\n\n  componentDidMount() {\n    let data = {};\n    if (this.state.pattern !== \"\" && this.state.pattern !== \"All\")\n      data[\"pattern\"] = this.state.pattern;\n    if (this.state.language !== \"\" && this.state.language !== \"ALL\")\n      data[\"language\"] = this.state.language;\n    if (this.state.projectType !== \"\" && this.state.projectType !== \"ALL\")\n      data[\"projectType\"] = this.state.projectType;\n\n    axios({\n      method: \"get\",\n      url: \"http://localhost:8080/project\",\n      params: data\n    })\n      .then(response => {\n        this.setState({ projects: response.data });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  projectTypeOnChange = (event, data) => {\n    switch (data.value) {\n      case \"Website\":\n        this.setState({\n          languageOptions: [\n            { text: \"All\", value: \"All\" },\n            { text: \"PHP\", value: \"PHP\" },\n            { text: \"HTML\", value: \"HTML\" }\n          ]\n        });\n        break;\n      case \"Window Application\":\n        this.setState({\n          languageOptions: [\n            { text: \"All\", value: \"All\" },\n            { text: \"JAVA\", value: \"JAVA\" }\n          ]\n        });\n        break;\n      case \"Android Appliation\":\n        this.setState({\n          languageOptions: [{ text: \"All\", value: \"All\" }]\n        });\n        break;\n      default:\n    }\n  };\n\n  searchOnChange = e => {\n    this.setState({ pattern: e.target.value });\n    console.log(e.target.value);\n  };\n\n  searchOnClick = e => {\n    console.log(\"clicked .\");\n  };\n\n  filterDate = date => {\n    var today = new Date();\n    var diff = Math.floor(\n      (Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) -\n        date.UTC(date.getFullYear(), date.getMonth(), date.getDate())) /\n        (1000 * 60 * 60 * 24)\n    );\n    console.log(\"diff :\", diff);\n  };\n  render() {\n    console.log(\"projects:\", this.state.projects);\n    const items = this.state.projects.map(project => {\n      console.log(this.filterDate(project.createdDate));\n      console.log(\"project\", project);\n\n      return (\n        <Item key={project.ProjectName}>\n          <Item.Content>\n            <Item.Header as=\"a\">{project.ProjectName}</Item.Header>\n\n            <Item.Meta>\n              <Label>{}</Label>\n              <span> by {project.username}</span>\n            </Item.Meta>\n            <Item.Description>{project.description}</Item.Description>\n            <Item.Extra>\n              <Button floated=\"right\" icon=\"play\" color=\"twitter\"></Button>\n\n              <Button floated=\"right\" icon=\"download\" color=\"twitter\" />\n\n              <Label>{project.ProjectType}</Label>\n\n              <Label>{project.Language}</Label>\n            </Item.Extra>\n          </Item.Content>\n        </Item>\n      );\n    });\n    const projectTypeOptions = [\n      { text: \"All\", value: \"All\" },\n      { text: \"Website\", value: \"Website\" },\n      { text: \"Window Application\", value: \"Window Application\" },\n      { text: \"Android\", value: \"Android\" }\n    ];\n\n    return (\n      <React.Fragment>\n        <div className=\"projectContent\">\n          <Form.Group>\n            <Segment clearing>\n              <Input placeholder=\"Search...\" onChange={this.searchOnChange} />\n              <Button content=\"Search\" onClick={this.searchOnClick} />\n\n              <span className=\"padd\"></span>\n              <Select\n                placeholder=\"Project Type\"\n                options={projectTypeOptions}\n                onChange={this.projectTypeOnChange}\n              />\n              <span className=\"padd\"></span>\n              <Select\n                placeholder=\"Language\"\n                options={this.state.languageOptions}\n              />\n            </Segment>\n          </Form.Group>\n          <Segment>\n            <Item.Group divided>{items}</Item.Group>\n          </Segment>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}