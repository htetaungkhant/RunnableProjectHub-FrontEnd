{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/WindowUploadForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Checkbox, Form, Select } from \"semantic-ui-react\";\n\nclass WindowUploadForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.languageOnChange = (event, data) => {\n      this.props.languageOnChange(data.value);\n      this.setState({\n        selectedLanguage: data.value\n      });\n    };\n\n    this.languageVersionOnChange = (event, data) => {\n      this.props.languageVersionOnChange(data.value);\n    };\n\n    this.projectFilesOnChange = (event, data) => {\n      this.props.projectFilesOnChange(event.target.files);\n    };\n\n    this.state = {\n      selectedLanguage: null\n    };\n  }\n\n  render() {\n    const detail = this.props.projectDetail; //extract website information\n\n    const windowDetail = detail.projects.filter(project => {\n      return project.projectType === \"Window Application\";\n    }); //extract supported language version from webInfo\n\n    const version = webDetail[0].language.filter(language => {\n      return language.name === this.state.selectedLanguage;\n    });\n    let versionOption = null;\n\n    if (version.length > 0) {\n      versionOption = version[0].version.map(v => {\n        return {\n          text: v,\n          value: v\n        };\n      });\n    } //extract supported Language from webInfo (\n\n\n    const languageOption = webDetail[0].language.map(language => {\n      return {\n        text: language.name,\n        value: language.name\n      };\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: languageOption,\n      label: \"language\",\n      placeholder: \"Language\",\n      onChange: this.languageOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: versionOption,\n      label: \"version\",\n      placeholder: \"Version\",\n      onChange: this.languageVersionOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" Application File\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.projectFilesOnChange,\n      accept: \".jar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default WindowUploadForm;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/WindowUploadForm.jsx"],"names":["React","Component","Checkbox","Form","Select","WindowUploadForm","constructor","props","languageOnChange","event","data","value","setState","selectedLanguage","languageVersionOnChange","projectFilesOnChange","target","files","state","render","detail","projectDetail","windowDetail","projects","filter","project","projectType","version","webDetail","language","name","versionOption","length","map","v","text","languageOption"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Checkbox, Form, Select } from \"semantic-ui-react\";\n\nclass WindowUploadForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedLanguage: null\n    };\n  }\n\n  languageOnChange = (event, data) => {\n    this.props.languageOnChange(data.value);\n    this.setState({ selectedLanguage: data.value });\n  };\n\n  languageVersionOnChange = (event, data) => {\n    this.props.languageVersionOnChange(data.value);\n  };\n\n  projectFilesOnChange = (event, data) => {\n    this.props.projectFilesOnChange(event.target.files);\n  };\n\n  render() {\n    const detail = this.props.projectDetail;\n\n    //extract website information\n    const windowDetail = detail.projects.filter(project => {\n      return project.projectType === \"Window Application\";\n    });\n    //extract supported language version from webInfo\n    const version = webDetail[0].language.filter(language => {\n      return language.name === this.state.selectedLanguage;\n    });\n    let versionOption = null;\n    if (version.length > 0) {\n      versionOption = version[0].version.map(v => {\n        return { text: v, value: v };\n      });\n    }\n\n    //extract supported Language from webInfo (\n    const languageOption = webDetail[0].language.map(language => {\n      return { text: language.name, value: language.name };\n    });\n\n    return (\n      <React.Fragment>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            fluid\n            control={Select}\n            options={languageOption}\n            label=\"language\"\n            placeholder=\"Language\"\n            onChange={this.languageOnChange}\n          />\n          <Form.Field\n            fluid\n            control={Select}\n            options={versionOption}\n            label=\"version\"\n            placeholder=\"Version\"\n            onChange={this.languageVersionOnChange}\n          />\n          <Form.Field>\n            <label> Application File</label>\n            <input\n              type=\"file\"\n              onChange={this.projectFilesOnChange}\n              accept=\".jar\"\n            />\n          </Form.Field>\n        </Form.Group>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WindowUploadForm;\n"]},"metadata":{},"sourceType":"module"}