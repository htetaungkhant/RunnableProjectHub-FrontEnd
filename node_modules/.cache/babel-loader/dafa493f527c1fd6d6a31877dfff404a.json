{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx\";\nimport React, { Component } from \"react\";\nimport WebsiteUploadForm from \"./WebsiteUploadForm\";\nimport WindowUploadForm from \"./WindowUploadForm\";\nimport AndroidUploadForm from \"./AndroidUploadForm\";\nimport axios from \"axios\";\nimport { Header, Segment, Message, TextArea, Checkbox, Button, Form, Select, Input } from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postForm = () => {\n      switch (this.state.selectProjectType) {\n        case \"Website\":\n          let formData = new FormData();\n          console.log(this.state.projectFiles);\n          console.log(formData);\n          var data = {\n            userName: this.state.userName,\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            language: this.state.selectLanguage,\n            languageVersion: this.state.selectLanguageVersion,\n            projectFiles: this.state.projectFiles,\n            isDbUsed: this.state.dbOnCheck,\n            dbName: this.state.dbLanguage,\n            dbVersion: this.state.dbVersion,\n            dbBackupName: this.state.dbName,\n            dbBackupFile: this.state.dbBackUpFile,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          };\n\n          for (var key in data) {\n            if (key != \"projectFiles\") formData.append(key, data[key]);\n          }\n\n          axios({\n            method: \"post\",\n            url: \"http://localhost:8080/upload\",\n            data: formData\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n          break;\n\n        case \"Window Application\":\n          axios({\n            method: \"post\",\n            headers: {\n              \"content-type\": \"multipart/form-data\"\n            },\n            url: \"http://localhost:8080/upload\",\n            data: {\n              userName: this.state.userName,\n              projectType: this.state.selectProjectType,\n              projectName: this.state.selectProjectName,\n              language: this.state.selectLanguage,\n              languageVersion: this.state.selectLanguageVersion,\n              projectFiles: this.state.projectFiles,\n              isDbUsed: this.state.dbOnCheck,\n              dbName: this.state.dbLanguage,\n              dbVersion: this.state.dbVersion,\n              dbBackupName: this.state.dbName,\n              dbBackupFile: this.state.dbBackUpFile,\n              description: this.state.description,\n              downloadPermission: this.state.downloadPermission\n            }\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n          break;\n\n        case \"Android Application\":\n          axios({\n            method: \"post\",\n            headers: {\n              \"content-type\": \"multipart/form-data\"\n            },\n            url: \"http://localhost:8080/upload\",\n            data: {\n              userName: this.state.userName,\n              projectType: this.state.selectProjectType,\n              projectName: this.state.selectProjectName,\n              device: this.state.androidDevice,\n              apiVersion: this.state.apiVersion,\n              androidVersion: this.state.androidVersion,\n              projectFiles: this.state.projectFiles,\n              description: this.state.description,\n              downloadPermission: this.state.downloadPermission\n            }\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n      }\n    };\n\n    this.deviceOnChange = value => {\n      this.setState({\n        androidDevice: value\n      });\n    };\n\n    this.androidVersionOnChange = value => {\n      this.setState({\n        androidVersion: value\n      });\n    };\n\n    this.apiVersionOnChange = value => {\n      this.setState({\n        apiVersion: value\n      });\n    };\n\n    this.projectTypeOnChange = (event, data) => {\n      this.setState({\n        selectProjectType: data.value\n      });\n      this.reset();\n      console.log(data.value);\n    };\n\n    this.projectNameOnChange = (event, data) => {\n      this.setState({\n        selectProjectName: event.target.value\n      });\n      console.log(this.state.selectProjectName);\n    };\n\n    this.languageOnChange = value => {\n      this.setState({\n        selectLanguage: value\n      });\n    };\n\n    this.languageVersionOnChange = value => {\n      this.setState({\n        selectLanguageVersion: value\n      });\n    };\n\n    this.projectFilesOnChange = value => {\n      this.setState({\n        projectFiles: value\n      });\n    };\n\n    this.dbOnCheck = value => {\n      this.setState({\n        dbOnCheck: value\n      });\n    };\n\n    this.dbOnChanage = value => {\n      this.setState({\n        dbLanguage: value\n      });\n    };\n\n    this.dbVersionOnChange = value => {\n      this.setState({\n        dbVersion: value\n      });\n    };\n\n    this.dbNameOnChange = value => {\n      this.setState({\n        dbName: value\n      });\n    };\n\n    this.dbBackUpOnChange = value => {\n      this.setState({\n        dbBackUpFile: value\n      });\n    };\n\n    this.descriptionOnChange = (e, data) => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.downloadPermissionOnChange = (e, data) => {\n      this.setState({\n        downloadPermission: data.checked\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.validateForm();\n      console.log(\"On Submit worked !\");\n      console.log(this.state);\n    };\n\n    this.validateForm = () => {\n      if (this.state.selectProjectType == \"Website\" || this.state.selectProjectType == \"Window Application\") {\n        if (this.state.name == null) this.setState({\n          errorStatus: true\n        });else if (this.state.selectLanguage == null) this.setState({\n          errorStatus: true\n        });else if (this.state.selectLanguageVersion == null) this.setState({\n          errorStatus: true\n        });else if (this.state.projectFiles == null) this.setState({\n          errorStatus: true\n        });else if (this.state.isDbUsed) {\n          if (this.state.dbName == null) this.setState({\n            errorStatus: true\n          });else if (this.state.dbLanguage == null) this.setState({\n            errorStatus: true\n          });else if (this.state.dbVersion == null) this.setState({\n            errorStatus: true\n          });else if (this.state.dbBackUpFile == null) this.setState({\n            errorStatus: true\n          });\n        }\n      } else if (this.state.selectProjectType == \"Android Application\") {\n        if (this.state.device == null) this.setState({\n          errorStatus: true\n        });else if (this.state.apiVersion == null) this.setState({\n          errorStatus: true\n        });else if (this.state.androidVersion == null) this.setState({\n          errorStatus: true\n        });\n      }\n\n      if (this.state.errorStatus) {\n        setTimeout(() => {\n          this.setState({\n            errorStatus: false\n          });\n        }, 5000);\n      } else {\n        console.log(\"posting form\");\n        this.postForm();\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        selectLanguage: null,\n        selectLanguageVersion: null,\n        projectFiles: null,\n        dbOnCheck: false,\n        dbLanguage: null,\n        dbVersion: null,\n        dbBackUpFile: null,\n        description: null,\n        downloadPermission: false,\n        androidDevice: null,\n        apiVersion: null,\n        androidVersion: null\n      });\n    };\n\n    this.state = {\n      loading: true,\n      projects: null,\n      projectTypes: null,\n      userName: \"koko\",\n      selectProjectType: \"\",\n      selectProjectName: null,\n      selectLanguage: null,\n      selectLanguageVersion: null,\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: null,\n      dbVersion: null,\n      dbName: null,\n      dbBackUpFile: null,\n      description: null,\n      downloadPermission: false,\n      androidDevice: null,\n      apiVersion: null,\n      androidVersion: null,\n      errorStatus: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/supportLanguage\").then(response => {\n      // handle success\n      const pj = response.data;\n      this.setState({\n        loading: false,\n        projects: pj,\n        projectTypes: pj.projects.map(project => {\n          return {\n            text: project.projectType,\n            value: project.projectType\n          };\n        }),\n        selectProjectType: \"Website\"\n      });\n      console.log(\"data fetched\", this.state.projectType);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    //error message\n    let showErrorMessage = null;\n\n    if (this.state.errorStatus) {\n      showErrorMessage = React.createElement(Message, {\n        error: true,\n        header: \"Failed to Submit ! Incomplete Form !\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      });\n    } else {\n      showErrorMessage = null;\n    }\n\n    let uploadform;\n\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        uploadform = React.createElement(WebsiteUploadForm, {\n          projectDetail: this.state.projects,\n          languageOnChange: this.languageOnChange,\n          languageVersionOnChange: this.languageVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          dbOnCheck: this.dbOnCheck,\n          dbOnChange: this.dbOnChanage,\n          dbNameOnChange: this.dbNameOnChange,\n          dbVersionOnChange: this.dbVersionOnChange,\n          dbBackUpOnChange: this.dbBackUpOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        });\n        break;\n\n      case \"Window Application\":\n        uploadform = React.createElement(WindowUploadForm, {\n          projectDetail: this.state.projects,\n          languageOnChange: this.languageOnChange,\n          languageVersionOnChange: this.languageVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          dbOnCheck: this.dbOnCheck,\n          dbOnChange: this.dbOnChanage,\n          dbNameOnChange: this.dbNameOnChange,\n          dbVersionOnChange: this.dbVersionOnChange,\n          dbBackUpOnChange: this.dbBackUpOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        });\n        break;\n\n      case \"Android Application\":\n        uploadform = React.createElement(AndroidUploadForm, {\n          projectDetail: this.state.projects,\n          deviceOnChange: this.deviceOnChange,\n          apiVersionOnChange: this.apiVersionOnChange,\n          androidVersionOnChange: this.androidVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        });\n        break;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"uploadForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Upload your project\"), showErrorMessage, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      label: \"Project Type\",\n      options: this.state.projectTypes,\n      placeholder: \"Project Type\",\n      onChange: this.projectTypeOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      inline: true,\n      fluid: true,\n      control: Input,\n      label: \"Project Name\",\n      placeholder: \"Name\",\n      onChange: this.projectNameOnChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), uploadform, React.createElement(Form.Field, {\n      control: TextArea,\n      label: \"Description\",\n      placeholder: \"Tell something about your project ...\",\n      onChange: this.descriptionOnChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Checkbox,\n      label: \"Allow download\",\n      onChange: this.downloadPermissionOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx"],"names":["React","Component","WebsiteUploadForm","WindowUploadForm","AndroidUploadForm","axios","Header","Segment","Message","TextArea","Checkbox","Button","Form","Select","Input","Upload","constructor","props","postForm","state","selectProjectType","formData","FormData","console","log","projectFiles","data","userName","projectType","projectName","selectProjectName","language","selectLanguage","languageVersion","selectLanguageVersion","isDbUsed","dbOnCheck","dbName","dbLanguage","dbVersion","dbBackupName","dbBackupFile","dbBackUpFile","description","downloadPermission","key","append","method","url","then","response","catch","error","headers","device","androidDevice","apiVersion","androidVersion","deviceOnChange","value","setState","androidVersionOnChange","apiVersionOnChange","projectTypeOnChange","event","reset","projectNameOnChange","target","languageOnChange","languageVersionOnChange","projectFilesOnChange","dbOnChanage","dbVersionOnChange","dbNameOnChange","dbBackUpOnChange","descriptionOnChange","e","downloadPermissionOnChange","checked","onSubmit","preventDefault","validateForm","name","errorStatus","setTimeout","loading","projects","projectTypes","componentDidMount","get","pj","map","project","text","render","showErrorMessage","uploadform"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport WebsiteUploadForm from \"./WebsiteUploadForm\";\nimport WindowUploadForm from \"./WindowUploadForm\";\nimport AndroidUploadForm from \"./AndroidUploadForm\";\nimport axios from \"axios\";\nimport {\n  Header,\n  Segment,\n  Message,\n  TextArea,\n  Checkbox,\n  Button,\n  Form,\n  Select,\n  Input\n} from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      projects: null,\n      projectTypes: null,\n      userName: \"koko\",\n      selectProjectType: \"\",\n      selectProjectName: null,\n      selectLanguage: null,\n      selectLanguageVersion: null,\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: null,\n      dbVersion: null,\n      dbName: null,\n      dbBackUpFile: null,\n      description: null,\n      downloadPermission: false,\n      androidDevice: null,\n      apiVersion: null,\n      androidVersion: null,\n      errorStatus: false\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:8080/supportLanguage\")\n      .then(response => {\n        // handle success\n        const pj = response.data;\n        this.setState({\n          loading: false,\n          projects: pj,\n          projectTypes: pj.projects.map(project => {\n            return { text: project.projectType, value: project.projectType };\n          }),\n          selectProjectType: \"Website\"\n        });\n        console.log(\"data fetched\", this.state.projectType);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      });\n  }\n\n  postForm = () => {\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        let formData = new FormData();\n        console.log(this.state.projectFiles);\n        console.log(formData);\n        var data = {\n          userName: this.state.userName,\n          projectType: this.state.selectProjectType,\n          projectName: this.state.selectProjectName,\n          language: this.state.selectLanguage,\n          languageVersion: this.state.selectLanguageVersion,\n          projectFiles: this.state.projectFiles,\n          isDbUsed: this.state.dbOnCheck,\n          dbName: this.state.dbLanguage,\n          dbVersion: this.state.dbVersion,\n          dbBackupName: this.state.dbName,\n          dbBackupFile: this.state.dbBackUpFile,\n          description: this.state.description,\n          downloadPermission: this.state.downloadPermission\n        };\n        for (var key in data) {\n          if (key != \"projectFiles\") formData.append(key, data[key]);\n        }\n        axios({\n          method: \"post\",\n          url: \"http://localhost:8080/upload\",\n          data: formData\n        })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n        break;\n      case \"Window Application\":\n        axios({\n          method: \"post\",\n          headers: { \"content-type\": \"multipart/form-data\" },\n          url: \"http://localhost:8080/upload\",\n          data: {\n            userName: this.state.userName,\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            language: this.state.selectLanguage,\n            languageVersion: this.state.selectLanguageVersion,\n            projectFiles: this.state.projectFiles,\n            isDbUsed: this.state.dbOnCheck,\n            dbName: this.state.dbLanguage,\n            dbVersion: this.state.dbVersion,\n            dbBackupName: this.state.dbName,\n            dbBackupFile: this.state.dbBackUpFile,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          }\n        })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n        break;\n      case \"Android Application\":\n        axios({\n          method: \"post\",\n          headers: { \"content-type\": \"multipart/form-data\" },\n          url: \"http://localhost:8080/upload\",\n          data: {\n            userName: this.state.userName,\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            device: this.state.androidDevice,\n            apiVersion: this.state.apiVersion,\n            androidVersion: this.state.androidVersion,\n            projectFiles: this.state.projectFiles,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          }\n        })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n    }\n  };\n\n  deviceOnChange = value => {\n    this.setState({ androidDevice: value });\n  };\n\n  androidVersionOnChange = value => {\n    this.setState({ androidVersion: value });\n  };\n\n  apiVersionOnChange = value => {\n    this.setState({ apiVersion: value });\n  };\n\n  projectTypeOnChange = (event, data) => {\n    this.setState({ selectProjectType: data.value });\n    this.reset();\n    console.log(data.value);\n  };\n\n  projectNameOnChange = (event, data) => {\n    this.setState({ selectProjectName: event.target.value });\n    console.log(this.state.selectProjectName);\n  };\n\n  languageOnChange = value => {\n    this.setState({ selectLanguage: value });\n  };\n\n  languageVersionOnChange = value => {\n    this.setState({ selectLanguageVersion: value });\n  };\n\n  projectFilesOnChange = value => {\n    this.setState({ projectFiles: value });\n  };\n\n  dbOnCheck = value => {\n    this.setState({ dbOnCheck: value });\n  };\n\n  dbOnChanage = value => {\n    this.setState({ dbLanguage: value });\n  };\n\n  dbVersionOnChange = value => {\n    this.setState({ dbVersion: value });\n  };\n\n  dbNameOnChange = value => {\n    this.setState({ dbName: value });\n  };\n\n  dbBackUpOnChange = value => {\n    this.setState({ dbBackUpFile: value });\n  };\n\n  descriptionOnChange = (e, data) => {\n    this.setState({ description: e.target.value });\n  };\n\n  downloadPermissionOnChange = (e, data) => {\n    this.setState({ downloadPermission: data.checked });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.validateForm();\n    console.log(\"On Submit worked !\");\n    console.log(this.state);\n  };\n\n  validateForm = () => {\n    if (\n      this.state.selectProjectType == \"Website\" ||\n      this.state.selectProjectType == \"Window Application\"\n    ) {\n      if (this.state.name == null) this.setState({ errorStatus: true });\n      else if (this.state.selectLanguage == null)\n        this.setState({ errorStatus: true });\n      else if (this.state.selectLanguageVersion == null)\n        this.setState({ errorStatus: true });\n      else if (this.state.projectFiles == null)\n        this.setState({ errorStatus: true });\n      else if (this.state.isDbUsed) {\n        if (this.state.dbName == null) this.setState({ errorStatus: true });\n        else if (this.state.dbLanguage == null)\n          this.setState({ errorStatus: true });\n        else if (this.state.dbVersion == null)\n          this.setState({ errorStatus: true });\n        else if (this.state.dbBackUpFile == null)\n          this.setState({ errorStatus: true });\n      }\n    } else if (this.state.selectProjectType == \"Android Application\") {\n      if (this.state.device == null) this.setState({ errorStatus: true });\n      else if (this.state.apiVersion == null)\n        this.setState({ errorStatus: true });\n      else if (this.state.androidVersion == null)\n        this.setState({ errorStatus: true });\n    }\n\n    if (this.state.errorStatus) {\n      setTimeout(() => {\n        this.setState({ errorStatus: false });\n      }, 5000);\n    } else {\n      console.log(\"posting form\");\n      this.postForm();\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      selectLanguage: null,\n      selectLanguageVersion: null,\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: null,\n      dbVersion: null,\n      dbBackUpFile: null,\n      description: null,\n      downloadPermission: false,\n      androidDevice: null,\n      apiVersion: null,\n      androidVersion: null\n    });\n  };\n\n  render() {\n    //error message\n    let showErrorMessage = null;\n    if (this.state.errorStatus) {\n      showErrorMessage = (\n        <Message error header=\"Failed to Submit ! Incomplete Form !\" />\n      );\n    } else {\n      showErrorMessage = null;\n    }\n\n    let uploadform;\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        uploadform = (\n          <WebsiteUploadForm\n            projectDetail={this.state.projects}\n            languageOnChange={this.languageOnChange}\n            languageVersionOnChange={this.languageVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n            dbOnCheck={this.dbOnCheck}\n            dbOnChange={this.dbOnChanage}\n            dbNameOnChange={this.dbNameOnChange}\n            dbVersionOnChange={this.dbVersionOnChange}\n            dbBackUpOnChange={this.dbBackUpOnChange}\n          />\n        );\n        break;\n      case \"Window Application\":\n        uploadform = (\n          <WindowUploadForm\n            projectDetail={this.state.projects}\n            languageOnChange={this.languageOnChange}\n            languageVersionOnChange={this.languageVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n            dbOnCheck={this.dbOnCheck}\n            dbOnChange={this.dbOnChanage}\n            dbNameOnChange={this.dbNameOnChange}\n            dbVersionOnChange={this.dbVersionOnChange}\n            dbBackUpOnChange={this.dbBackUpOnChange}\n          />\n        );\n        break;\n      case \"Android Application\":\n        uploadform = (\n          <AndroidUploadForm\n            projectDetail={this.state.projects}\n            deviceOnChange={this.deviceOnChange}\n            apiVersionOnChange={this.apiVersionOnChange}\n            androidVersionOnChange={this.androidVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n          />\n        );\n        break;\n    }\n\n    return (\n      <div className=\"uploadForm\">\n        <Header as=\"h2\" textAlign=\"center\">\n          Upload your project\n        </Header>\n\n        {showErrorMessage}\n        <Form onSubmit={this.onSubmit}>\n          <Form.Field\n            fluid\n            control={Select}\n            label=\"Project Type\"\n            options={this.state.projectTypes}\n            placeholder=\"Project Type\"\n            onChange={this.projectTypeOnChange}\n          />\n          <Form.Field\n            inline\n            fluid\n            control={Input}\n            label=\"Project Name\"\n            placeholder=\"Name\"\n            onChange={this.projectNameOnChange}\n            required\n          />\n          {uploadform}\n          <Form.Field\n            control={TextArea}\n            label=\"Description\"\n            placeholder=\"Tell something about your project ...\"\n            onChange={this.descriptionOnChange}\n            required\n          />\n          <Form.Field\n            control={Checkbox}\n            label=\"Allow download\"\n            onChange={this.downloadPermissionOnChange}\n          />\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}