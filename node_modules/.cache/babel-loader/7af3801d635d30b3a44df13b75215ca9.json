{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/AndroidUploadForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Checkbox, Form, Select } from \"semantic-ui-react\";\n\nclass AndroidUploadForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.projectFilesOnChange = (event, data) => {\n      this.props.projectFilesOnChange(event.target.files);\n    };\n\n    this.deviceOnChange = (e, data) => {\n      this.props.deviceOnChange(data.value);\n    };\n\n    this.androidVersionOnChange = (e, data) => {\n      this.props.androidVersionOnChange(data.value);\n    };\n\n    this.apiVersionOnChange = (e, data) => {\n      this.props.apiVersionOnChange(data.value);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const detail = this.props.projectDetail; //extract android information\n\n    const androidDetail = detail.projects.filter(project => {\n      return project.projectType === \"Android Application\";\n    });\n    const deviceOption = androidDetail[0].device.map(v => {\n      return {\n        text: v,\n        value: v\n      };\n    });\n    const androidVersionOption = androidDetail[0].androidVersion.map(v => {\n      return {\n        text: v,\n        value: v\n      };\n    });\n    const apiVersionOption = androidDetail[0].apiVersion.map(v => {\n      return {\n        text: v,\n        value: v\n      };\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: deviceOption,\n      label: \"Device\",\n      placeholder: \"Device\",\n      onChange: this.deviceOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: androidVersionOption,\n      label: \"Android Version\",\n      placeholder: \"Android Version\",\n      onChange: this.androidVersionOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      options: apiVersionOption,\n      label: \"API Version\",\n      placeholder: \"API Version\",\n      onChange: this.apiVersionOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" Application File\"), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.projectFilesOnChange,\n      accept: \".apk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AndroidUploadForm;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/AndroidUploadForm.jsx"],"names":["React","Component","Checkbox","Form","Select","AndroidUploadForm","constructor","props","projectFilesOnChange","event","data","target","files","deviceOnChange","e","value","androidVersionOnChange","apiVersionOnChange","state","render","detail","projectDetail","androidDetail","projects","filter","project","projectType","deviceOption","device","map","v","text","androidVersionOption","androidVersion","apiVersionOption","apiVersion"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Checkbox, Form, Select } from \"semantic-ui-react\";\n\nclass AndroidUploadForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  projectFilesOnChange = (event, data) => {\n    this.props.projectFilesOnChange(event.target.files);\n  };\n\n  deviceOnChange = (e, data) => {\n    this.props.deviceOnChange(data.value);\n  };\n\n  androidVersionOnChange = (e, data) => {\n    this.props.androidVersionOnChange(data.value);\n  };\n\n  apiVersionOnChange = (e, data) => {\n    this.props.apiVersionOnChange(data.value);\n  };\n\n  render() {\n    const detail = this.props.projectDetail;\n\n    //extract android information\n    const androidDetail = detail.projects.filter(project => {\n      return project.projectType === \"Android Application\";\n    });\n\n    const deviceOption = androidDetail[0].device.map(v => {\n      return { text: v, value: v };\n    });\n\n    const androidVersionOption = androidDetail[0].androidVersion.map(v => {\n      return { text: v, value: v };\n    });\n\n    const apiVersionOption = androidDetail[0].apiVersion.map(v => {\n      return { text: v, value: v };\n    });\n\n    return (\n      <React.Fragment>\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            fluid\n            control={Select}\n            options={deviceOption}\n            label=\"Device\"\n            placeholder=\"Device\"\n            onChange={this.deviceOnChange}\n          />\n          <Form.Field\n            fluid\n            control={Select}\n            options={androidVersionOption}\n            label=\"Android Version\"\n            placeholder=\"Android Version\"\n            onChange={this.androidVersionOnChange}\n          />\n          <Form.Field\n            fluid\n            control={Select}\n            options={apiVersionOption}\n            label=\"API Version\"\n            placeholder=\"API Version\"\n            onChange={this.apiVersionOnChange}\n          />\n        </Form.Group>\n        <Form.Field>\n          <label> Application File</label>\n          <input\n            type=\"file\"\n            onChange={this.projectFilesOnChange}\n            accept=\".apk\"\n          />\n        </Form.Field>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AndroidUploadForm;\n"]},"metadata":{},"sourceType":"module"}