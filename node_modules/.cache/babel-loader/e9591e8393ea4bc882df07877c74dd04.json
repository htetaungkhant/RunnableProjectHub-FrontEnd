{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx\";\nimport React, { Component } from \"react\";\nimport WebsiteUploadForm from \"./WebsiteUploadForm\";\nimport WindowUploadForm from \"./WindowUploadForm\";\nimport AndroidUploadForm from \"./AndroidUploadForm\";\nimport axios from \"axios\";\nimport { Header, Segment, Message, TextArea, Checkbox, Button, Form, Select, Input } from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postForm = () => {\n      switch (this.state.selectProjectType) {\n        case \"Website\":\n          axios.post(\"http://localhost:8080/upload\", {\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            language: this.state.selectLanguage,\n            languageVersion: this.state.selectLanguageVersion,\n            isDbUsed: this.state.dbOnCheck,\n            dbLanguage: this.state.dbLanguage,\n            dbVersion: this.state.dbVersion,\n            dbBackup: this.state.dbBackUpFile,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n          break;\n\n        case \"Window Application\":\n          axios.post(\"http://localhost:8080/upload\", {\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            language: this.state.selectLanguage,\n            languageVersion: this.state.selectLanguageVersion,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n          break;\n\n        case \"Android Application\":\n          axios.post(\"http://localhost:8080/upload\", {\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            device: this.state.androidDevice,\n            apiVersion: this.state.apiVersion,\n            androidVersion: this.state.androidVersion,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          }).then(function (response) {\n            console.log(response);\n          }).catch(function (error) {\n            console.log(error);\n          });\n      }\n    };\n\n    this.deviceOnChange = value => {\n      this.setState({\n        androidDevice: value\n      });\n    };\n\n    this.androidVersionOnChange = value => {\n      this.setState({\n        androidVersion: value\n      });\n    };\n\n    this.apiVersionOnChange = value => {\n      this.setState({\n        apiVersion: value\n      });\n    };\n\n    this.projectTypeOnChange = (event, data) => {\n      this.setState({\n        selectProjectType: data.value\n      });\n      this.reset();\n      console.log(data.value);\n    };\n\n    this.projectNameOnChange = (event, data) => {\n      this.setState({\n        selectProjectName: event.target.value\n      });\n      console.log(this.state.selectProjectName);\n    };\n\n    this.languageOnChange = value => {\n      this.setState({\n        selectLanguage: value\n      });\n    };\n\n    this.languageVersionOnChange = value => {\n      this.setState({\n        selectLanguageVersion: value\n      });\n    };\n\n    this.projectFilesOnChange = value => {\n      this.setState({\n        projectFiles: value\n      });\n    };\n\n    this.dbOnCheck = value => {\n      this.setState({\n        dbOnCheck: value\n      });\n    };\n\n    this.dbOnChanage = value => {\n      this.setState({\n        dbLanguage: value\n      });\n    };\n\n    this.dbVersionOnChange = value => {\n      this.setState({\n        dbVersion: value\n      });\n    };\n\n    this.dbNameOnChange = value => {\n      this.setState({\n        dbName: value\n      });\n    };\n\n    this.dbBackUpOnChange = value => {\n      this.setState({\n        dbBackUpFile: value\n      });\n    };\n\n    this.descriptionOnChange = (e, data) => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.downloadPermissionOnChange = (e, data) => {\n      this.setState({\n        downloadPermission: data.checked\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.validateForm();\n      console.log(\"On Submit worked !\");\n      console.log(this.state);\n    };\n\n    this.validateForm = () => {\n      this.setState({\n        errorStatus: true\n      });\n      setTimeout(() => {\n        this.setState({\n          errorStatus: false\n        });\n      }, 4000);\n    };\n\n    this.reset = () => {\n      this.setState({\n        selectLanguage: null,\n        selectLanguageVersion: null,\n        projectFiles: null,\n        dbOnCheck: false,\n        dbLanguage: null,\n        dbVersion: null,\n        dbBackUpFile: null,\n        description: null,\n        downloadPermission: false,\n        androidDevice: null,\n        apiVersion: null,\n        androidVersion: null\n      });\n    };\n\n    this.state = {\n      loading: true,\n      projects: null,\n      projectTypes: null,\n      selectProjectType: \"\",\n      selectProjectName: null,\n      selectLanguage: null,\n      selectLanguageVersion: null,\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: null,\n      dbVersion: null,\n      dbName: null,\n      dbBackUpFile: null,\n      description: null,\n      downloadPermission: false,\n      androidDevice: null,\n      apiVersion: null,\n      androidVersion: null,\n      errorStatus: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/supportLanguage\").then(response => {\n      // handle success\n      const pj = response.data;\n      this.setState({\n        loading: false,\n        projects: pj,\n        projectTypes: pj.projects.map(project => {\n          return {\n            text: project.projectType,\n            value: project.projectType\n          };\n        }),\n        selectProjectType: \"Website\"\n      });\n      console.log(\"data fetched\", this.state.projectType);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    //error message\n    let showErrorMessage = null;\n\n    if (this.state.errorStatus) {\n      showErrorMessage = React.createElement(Message, {\n        error: true,\n        header: \"Failed to Submit ! Incomplete Form !\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      });\n    } else {\n      showErrorMessage = null;\n    }\n\n    let uploadform;\n\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        uploadform = React.createElement(WebsiteUploadForm, {\n          projectDetail: this.state.projects,\n          languageOnChange: this.languageOnChange,\n          languageVersionOnChange: this.languageVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          dbOnCheck: this.dbOnCheck,\n          dbOnChange: this.dbOnChanage,\n          dbVersionOnChange: this.dbVersionOnChange,\n          dbBackUpOnChange: this.dbBackUpOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        });\n        break;\n\n      case \"Window Application\":\n        uploadform = React.createElement(WindowUploadForm, {\n          projectDetail: this.state.projects,\n          languageOnChange: this.languageOnChange,\n          languageVersionOnChange: this.languageVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        });\n        break;\n\n      case \"Android Application\":\n        uploadform = React.createElement(AndroidUploadForm, {\n          projectDetail: this.state.projects,\n          deviceOnChange: this.deviceOnChange,\n          apiVersionOnChange: this.apiVersionOnChange,\n          androidVersionOnChange: this.androidVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        });\n        break;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"uploadForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Upload your project\"), showErrorMessage, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      label: \"Project Type\",\n      options: this.state.projectTypes,\n      placeholder: \"Project Type\",\n      onChange: this.projectTypeOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      inline: true,\n      fluid: true,\n      control: Input,\n      label: \"Project Name\",\n      placeholder: \"Name\",\n      onChange: this.projectNameOnChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), uploadform, React.createElement(Form.Field, {\n      control: TextArea,\n      label: \"Description\",\n      placeholder: \"Tell something about your project ...\",\n      onChange: this.descriptionOnChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Checkbox,\n      label: \"allow download\",\n      onChange: this.downloadPermissionOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx"],"names":["React","Component","WebsiteUploadForm","WindowUploadForm","AndroidUploadForm","axios","Header","Segment","Message","TextArea","Checkbox","Button","Form","Select","Input","Upload","constructor","props","postForm","state","selectProjectType","post","projectType","projectName","selectProjectName","language","selectLanguage","languageVersion","selectLanguageVersion","isDbUsed","dbOnCheck","dbLanguage","dbVersion","dbBackup","dbBackUpFile","description","downloadPermission","then","response","console","log","catch","error","device","androidDevice","apiVersion","androidVersion","deviceOnChange","value","setState","androidVersionOnChange","apiVersionOnChange","projectTypeOnChange","event","data","reset","projectNameOnChange","target","languageOnChange","languageVersionOnChange","projectFilesOnChange","projectFiles","dbOnChanage","dbVersionOnChange","dbNameOnChange","dbName","dbBackUpOnChange","descriptionOnChange","e","downloadPermissionOnChange","checked","onSubmit","preventDefault","validateForm","errorStatus","setTimeout","loading","projects","projectTypes","componentDidMount","get","pj","map","project","text","render","showErrorMessage","uploadform"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport WebsiteUploadForm from \"./WebsiteUploadForm\";\nimport WindowUploadForm from \"./WindowUploadForm\";\nimport AndroidUploadForm from \"./AndroidUploadForm\";\nimport axios from \"axios\";\nimport {\n  Header,\n  Segment,\n  Message,\n  TextArea,\n  Checkbox,\n  Button,\n  Form,\n  Select,\n  Input\n} from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      projects: null,\n      projectTypes: null,\n      selectProjectType: \"\",\n      selectProjectName: null,\n      selectLanguage: null,\n      selectLanguageVersion: null,\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: null,\n      dbVersion: null,\n      dbName: null,\n      dbBackUpFile: null,\n      description: null,\n      downloadPermission: false,\n      androidDevice: null,\n      apiVersion: null,\n      androidVersion: null,\n      errorStatus: false\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:8080/supportLanguage\")\n      .then(response => {\n        // handle success\n        const pj = response.data;\n        this.setState({\n          loading: false,\n          projects: pj,\n          projectTypes: pj.projects.map(project => {\n            return { text: project.projectType, value: project.projectType };\n          }),\n          selectProjectType: \"Website\"\n        });\n        console.log(\"data fetched\", this.state.projectType);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      });\n  }\n\n  postForm = () => {\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        axios\n          .post(\"http://localhost:8080/upload\", {\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            language: this.state.selectLanguage,\n            languageVersion: this.state.selectLanguageVersion,\n            isDbUsed: this.state.dbOnCheck,\n            dbLanguage: this.state.dbLanguage,\n            dbVersion: this.state.dbVersion,\n            dbBackup: this.state.dbBackUpFile,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n        break;\n      case \"Window Application\":\n        axios\n          .post(\"http://localhost:8080/upload\", {\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            language: this.state.selectLanguage,\n            languageVersion: this.state.selectLanguageVersion,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n        break;\n      case \"Android Application\":\n        axios\n          .post(\"http://localhost:8080/upload\", {\n            projectType: this.state.selectProjectType,\n            projectName: this.state.selectProjectName,\n            device: this.state.androidDevice,\n            apiVersion: this.state.apiVersion,\n            androidVersion: this.state.androidVersion,\n            description: this.state.description,\n            downloadPermission: this.state.downloadPermission\n          })\n          .then(function(response) {\n            console.log(response);\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n    }\n  };\n\n  deviceOnChange = value => {\n    this.setState({ androidDevice: value });\n  };\n\n  androidVersionOnChange = value => {\n    this.setState({ androidVersion: value });\n  };\n\n  apiVersionOnChange = value => {\n    this.setState({ apiVersion: value });\n  };\n\n  projectTypeOnChange = (event, data) => {\n    this.setState({ selectProjectType: data.value });\n    this.reset();\n    console.log(data.value);\n  };\n\n  projectNameOnChange = (event, data) => {\n    this.setState({ selectProjectName: event.target.value });\n    console.log(this.state.selectProjectName);\n  };\n\n  languageOnChange = value => {\n    this.setState({ selectLanguage: value });\n  };\n\n  languageVersionOnChange = value => {\n    this.setState({ selectLanguageVersion: value });\n  };\n\n  projectFilesOnChange = value => {\n    this.setState({ projectFiles: value });\n  };\n\n  dbOnCheck = value => {\n    this.setState({ dbOnCheck: value });\n  };\n\n  dbOnChanage = value => {\n    this.setState({ dbLanguage: value });\n  };\n\n  dbVersionOnChange = value => {\n    this.setState({ dbVersion: value });\n  };\n\n  dbNameOnChange = value => {\n    this.setState({ dbName: value });\n  };\n  dbBackUpOnChange = value => {\n    this.setState({ dbBackUpFile: value });\n  };\n\n  descriptionOnChange = (e, data) => {\n    this.setState({ description: e.target.value });\n  };\n\n  downloadPermissionOnChange = (e, data) => {\n    this.setState({ downloadPermission: data.checked });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.validateForm();\n    console.log(\"On Submit worked !\");\n    console.log(this.state);\n  };\n\n  validateForm = () => {\n    this.setState({ errorStatus: true });\n    setTimeout(() => {\n      this.setState({ errorStatus: false });\n    }, 4000);\n  };\n\n  reset = () => {\n    this.setState({\n      selectLanguage: null,\n      selectLanguageVersion: null,\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: null,\n      dbVersion: null,\n      dbBackUpFile: null,\n      description: null,\n      downloadPermission: false,\n      androidDevice: null,\n      apiVersion: null,\n      androidVersion: null\n    });\n  };\n\n  render() {\n    //error message\n    let showErrorMessage = null;\n    if (this.state.errorStatus) {\n      showErrorMessage = (\n        <Message error header=\"Failed to Submit ! Incomplete Form !\" />\n      );\n    } else {\n      showErrorMessage = null;\n    }\n\n    let uploadform;\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        uploadform = (\n          <WebsiteUploadForm\n            projectDetail={this.state.projects}\n            languageOnChange={this.languageOnChange}\n            languageVersionOnChange={this.languageVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n            dbOnCheck={this.dbOnCheck}\n            dbOnChange={this.dbOnChanage}\n            dbVersionOnChange={this.dbVersionOnChange}\n            dbBackUpOnChange={this.dbBackUpOnChange}\n          />\n        );\n        break;\n      case \"Window Application\":\n        uploadform = (\n          <WindowUploadForm\n            projectDetail={this.state.projects}\n            languageOnChange={this.languageOnChange}\n            languageVersionOnChange={this.languageVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n          />\n        );\n        break;\n      case \"Android Application\":\n        uploadform = (\n          <AndroidUploadForm\n            projectDetail={this.state.projects}\n            deviceOnChange={this.deviceOnChange}\n            apiVersionOnChange={this.apiVersionOnChange}\n            androidVersionOnChange={this.androidVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n          />\n        );\n        break;\n    }\n\n    return (\n      <div className=\"uploadForm\">\n        <Header as=\"h2\" textAlign=\"center\">\n          Upload your project\n        </Header>\n\n        {showErrorMessage}\n        <Form onSubmit={this.onSubmit}>\n          <Form.Field\n            fluid\n            control={Select}\n            label=\"Project Type\"\n            options={this.state.projectTypes}\n            placeholder=\"Project Type\"\n            onChange={this.projectTypeOnChange}\n          />\n          <Form.Field\n            inline\n            fluid\n            control={Input}\n            label=\"Project Name\"\n            placeholder=\"Name\"\n            onChange={this.projectNameOnChange}\n            required\n          />\n          {uploadform}\n          <Form.Field\n            control={TextArea}\n            label=\"Description\"\n            placeholder=\"Tell something about your project ...\"\n            onChange={this.descriptionOnChange}\n            required\n          />\n          <Form.Field\n            control={Checkbox}\n            label=\"allow download\"\n            onChange={this.downloadPermissionOnChange}\n          />\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}