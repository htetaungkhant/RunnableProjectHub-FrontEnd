{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx\";\nimport React, { Component } from \"react\";\nimport UploadForm from \"./UploadForm\";\nimport axios from \"axios\";\nimport { Checkbox, Button, Form, Select, Input, TextArea, Divider } from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.projectTypeOnChange = (event, data) => {\n      console.log(data.value);\n    };\n\n    this.state = {\n      loading: true,\n      projects: null,\n      projectType: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/supportLanguage\").then(response => {\n      // handle success\n      const pj = response.data;\n      this.setState({\n        loading: false,\n        projects: pj,\n        projectType: pj.projects.map(project => {\n          return {\n            text: project.projectType,\n            value: project.projectType\n          };\n        })\n      });\n      console.log(\"data fetched\", this.state.projectType);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    const options = [{\n      text: \"Website\",\n      value: \"website\"\n    }, {\n      text: \"Window Application\",\n      value: \"window application\"\n    }, {\n      text: \"Android Application\",\n      value: \"android application\"\n    }];\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      label: \"Project Type\",\n      options: this.state.projectType,\n      placeholder: \"Project Type\",\n      width: 4,\n      onChange: this.projectTypeOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      inline: true,\n      fluid: true,\n      control: Input,\n      label: \"Title\",\n      placeholder: \"title\",\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(UploadForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx"],"names":["React","Component","UploadForm","axios","Checkbox","Button","Form","Select","Input","TextArea","Divider","Upload","constructor","props","projectTypeOnChange","event","data","console","log","value","state","loading","projects","projectType","componentDidMount","get","then","response","pj","setState","map","project","text","catch","error","render","options"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,OAPF,QAQO,mBARP;;AAUA,MAAMC,MAAN,SAAqBV,SAArB,CAA+B;AAC7BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8BnBC,mBA9BmB,GA8BG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACD,KAhCkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBrB,IAAAA,KAAK,CACFsB,GADH,CACO,uCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB;AACA,YAAMC,EAAE,GAAGD,QAAQ,CAACX,IAApB;AACA,WAAKa,QAAL,CAAc;AACZR,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,QAAQ,EAAEM,EAFE;AAGZL,QAAAA,WAAW,EAAEK,EAAE,CAACN,QAAH,CAAYQ,GAAZ,CAAgBC,OAAO,IAAI;AACtC,iBAAO;AAAEC,YAAAA,IAAI,EAAED,OAAO,CAACR,WAAhB;AAA6BJ,YAAAA,KAAK,EAAEY,OAAO,CAACR;AAA5C,WAAP;AACD,SAFY;AAHD,OAAd;AAOAN,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKE,KAAL,CAAWG,WAAvC;AACD,KAbH,EAcGU,KAdH,CAcS,UAASC,KAAT,EAAgB;AACrB;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACD,KAjBH;AAkBD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CACd;AAAEJ,MAAAA,IAAI,EAAE,SAAR;AAAmBb,MAAAA,KAAK,EAAE;AAA1B,KADc,EAEd;AAAEa,MAAAA,IAAI,EAAE,oBAAR;AAA8Bb,MAAAA,KAAK,EAAE;AAArC,KAFc,EAGd;AAAEa,MAAAA,IAAI,EAAE,qBAAR;AAA+Bb,MAAAA,KAAK,EAAE;AAAtC,KAHc,CAAhB;AAMA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,OAAO,EAAEZ,MAFX;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,OAAO,EAAE,KAAKa,KAAL,CAAWG,WAJtB;AAKE,MAAA,WAAW,EAAC,cALd;AAME,MAAA,KAAK,EAAE,CANT;AAOE,MAAA,QAAQ,EAAE,KAAKT,mBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,MAAM,MADR;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,OAAO,EAAEN,KAHX;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,WAAW,EAAC,OALd;AAME,MAAA,KAAK,EAAE,CANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAmBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CADF;AAuBD;;AAjE4B;;AAoE/B,eAAeG,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport UploadForm from \"./UploadForm\";\nimport axios from \"axios\";\nimport {\n  Checkbox,\n  Button,\n  Form,\n  Select,\n  Input,\n  TextArea,\n  Divider\n} from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      projects: null,\n      projectType: null\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:8080/supportLanguage\")\n      .then(response => {\n        // handle success\n        const pj = response.data;\n        this.setState({\n          loading: false,\n          projects: pj,\n          projectType: pj.projects.map(project => {\n            return { text: project.projectType, value: project.projectType };\n          })\n        });\n        console.log(\"data fetched\", this.state.projectType);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      });\n  }\n\n  projectTypeOnChange = (event, data) => {\n    console.log(data.value);\n  };\n\n  render() {\n    const options = [\n      { text: \"Website\", value: \"website\" },\n      { text: \"Window Application\", value: \"window application\" },\n      { text: \"Android Application\", value: \"android application\" }\n    ];\n\n    return (\n      <Form>\n        <Form.Field\n          fluid\n          control={Select}\n          label=\"Project Type\"\n          options={this.state.projectType}\n          placeholder=\"Project Type\"\n          width={4}\n          onChange={this.projectTypeOnChange}\n        />\n        <Form.Field\n          inline\n          fluid\n          control={Input}\n          label=\"Title\"\n          placeholder=\"title\"\n          width={4}\n        />\n\n        <UploadForm />\n      </Form>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}