{"ast":null,"code":"var _jsxFileName = \"/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx\";\nimport React, { Component } from \"react\";\nimport WebsiteUploadForm from \"./WebsiteUploadForm\";\nimport WindowUploadForm from \"./WindowUploadForm\";\nimport AndroidUploadForm from \"./AndroidUploadForm\";\nimport axios from \"axios\";\nimport { Message, TextArea, Checkbox, Button, Form, Select, Input } from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deviceOnChange = value => {\n      this.setState({\n        androidDevice: value\n      });\n    };\n\n    this.androidVersionOnChange = value => {\n      this.setState({\n        androidVersion: value\n      });\n    };\n\n    this.apiVersionOnChange = value => {\n      this.setState({\n        apiVersion: value\n      });\n    };\n\n    this.projectTypeOnChange = (event, data) => {\n      this.setState({\n        selectProjectType: data.value\n      });\n      this.reset();\n      console.log(data.value);\n    };\n\n    this.projectNameOnChange = (event, data) => {\n      this.setState({\n        selectProjectName: event.target.value\n      });\n      console.log(this.state.selectProjectName);\n    };\n\n    this.languageOnChange = value => {\n      this.setState({\n        selectLanguage: value\n      });\n    };\n\n    this.languageVersionOnChange = value => {\n      this.setState({\n        selectLanguageVersion: value\n      });\n    };\n\n    this.projectFilesOnChange = value => {\n      this.setState({\n        projectFiles: value\n      });\n    };\n\n    this.dbOnCheck = value => {\n      this.setState({\n        dbOnCheck: value\n      });\n    };\n\n    this.dbOnChanage = value => {\n      this.setState({\n        dbLanguage: value\n      });\n    };\n\n    this.dbVersionOnChange = value => {\n      this.setState({\n        dbVersion: value\n      });\n    };\n\n    this.dbBackUpOnChange = value => {\n      this.setState({\n        dbBackUpFile: value\n      });\n    };\n\n    this.descriptionOnChange = (e, data) => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.downloadPermissionOnChange = (e, data) => {\n      this.setState({\n        downloadPermission: data.checked\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      console.log(\"On Submit worked !\");\n      console.log(this.state);\n      this.validateForm();\n    };\n\n    this.validateForm = () => {\n      let message = [];\n\n      switch (this.state.selectProjectType) {\n        case \"Website\":\n          message += this.state.selectLanguage == null ? message.push(\"Language required.\") : \"\";\n          message += this.state.selectLanguageVersion == null ? message.push(\"Language version required.\") : \"\";\n          message += this.state.projectFiles == null ? message.push(\"Project files required.\") : \"\";\n\n          if (this.state.dbOnCheck) {\n            message += this.state.dbLanguage == null ? message.push(\"Database required.\") : \"\";\n            message += this.state.dbVersion == null ? message.push(\"Datbase version required.\") : \"\";\n            message += this.state.dbBackUpFile == null ? message.push(\".Sql backup required.\") : \"\";\n          }\n\n          break;\n\n        case \"Window Application\":\n          message += this.state.selectLanguage == null ? message.push(\"Language required.\") : \"\";\n          message += this.state.selectLanguageVersion == null ? message.push(\"Language version required.\") : \"\";\n          message += this.state.projectFiles == null ? message.push(\"Application file required.\") : \"\";\n          break;\n\n        case \"Android Appliation\":\n          message += this.state.androidDevice == null ? message.push(\"Device required.\") : \"\";\n          message += this.state.apiVersion == null ? message.push(\"API version required.\") : \"\";\n          message += this.state.androidVersion == null ? message.push(\"Android version required.\") : \"\";\n          message += this.state.projectFiles == null ? message.push(\"Application file required.\") : \"\";\n      }\n\n      this.setState({\n        errorMessage: message\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        selectLanguage: null,\n        selectLanguageVersion: null,\n        projectFiles: null,\n        dbOnCheck: false,\n        dbLanguage: null,\n        dbVersion: null,\n        dbBackUpFile: null,\n        description: null,\n        downloadPermission: false,\n        androidDevice: null,\n        apiVersion: null,\n        androidVersion: null\n      });\n    };\n\n    this.state = {\n      loading: true,\n      projects: null,\n      projectTypes: null,\n      selectProjectType: \"\",\n      selecteProjectName: null,\n      selectLanguage: null,\n      selectLanguageVersion: null,\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: null,\n      dbVersion: null,\n      dbBackUpFile: null,\n      description: null,\n      downloadPermission: false,\n      androidDevice: null,\n      apiVersion: null,\n      androidVersion: null,\n      errorMessage: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/supportLanguage\").then(response => {\n      // handle success\n      const pj = response.data;\n      this.setState({\n        loading: false,\n        projects: pj,\n        projectTypes: pj.projects.map(project => {\n          return {\n            text: project.projectType,\n            value: project.projectType\n          };\n        }),\n        selectProjectType: \"Website\"\n      });\n      console.log(\"data fetched\", this.state.projectType);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    //error message\n    let showErrorMessage = null;\n\n    if (this.state.errorMessage.length > 0) {\n      showErrorMessage = React.createElement(Message, {\n        error: true,\n        header: \"There was some errors with your submission\",\n        list: [\"You must include both a upper and lower case letters in your password.\", \"You need to select your home country.\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      });\n    } else {\n      showErrorMessage = null;\n    }\n\n    let uploadform;\n\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        uploadform = React.createElement(WebsiteUploadForm, {\n          projectDetail: this.state.projects,\n          languageOnChange: this.languageOnChange,\n          languageVersionOnChange: this.languageVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          dbOnCheck: this.dbOnCheck,\n          dbOnChange: this.dbOnChanage,\n          dbVersionOnChange: this.dbVersionOnChange,\n          dbBackUpOnChange: this.dbBackUpOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        });\n        break;\n\n      case \"Window Application\":\n        uploadform = React.createElement(WindowUploadForm, {\n          projectDetail: this.state.projects,\n          languageOnChange: this.languageOnChange,\n          languageVersionOnChange: this.languageVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        });\n        break;\n\n      case \"Android Application\":\n        uploadform = React.createElement(AndroidUploadForm, {\n          projectDetail: this.state.projects,\n          deviceOnChange: this.deviceOnChange,\n          apiVersionOnChange: this.apiVersionOnChange,\n          androidVersionOnChange: this.androidVersionOnChange,\n          projectFilesOnChange: this.projectFilesOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        });\n        break;\n    }\n\n    return React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      fluid: true,\n      control: Select,\n      label: \"Project Type\",\n      options: this.state.projectTypes,\n      placeholder: \"Project Type\",\n      onChange: this.projectTypeOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      inline: true,\n      fluid: true,\n      control: Input,\n      label: \"Project Name\",\n      placeholder: \"Name\",\n      onChange: this.projectNameOnChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), uploadform, React.createElement(Form.Field, {\n      control: TextArea,\n      label: \"About\",\n      placeholder: \"Tell something about your project ...\",\n      onChange: this.descriptionOnChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Checkbox,\n      label: \"allow download\",\n      onChange: this.downloadPermissionOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/htunlin/react/runnableprojecthub/src/component/Upload.jsx"],"names":["React","Component","WebsiteUploadForm","WindowUploadForm","AndroidUploadForm","axios","Message","TextArea","Checkbox","Button","Form","Select","Input","Upload","constructor","props","deviceOnChange","value","setState","androidDevice","androidVersionOnChange","androidVersion","apiVersionOnChange","apiVersion","projectTypeOnChange","event","data","selectProjectType","reset","console","log","projectNameOnChange","selectProjectName","target","state","languageOnChange","selectLanguage","languageVersionOnChange","selectLanguageVersion","projectFilesOnChange","projectFiles","dbOnCheck","dbOnChanage","dbLanguage","dbVersionOnChange","dbVersion","dbBackUpOnChange","dbBackUpFile","descriptionOnChange","e","description","downloadPermissionOnChange","downloadPermission","checked","onSubmit","preventDefault","validateForm","message","push","errorMessage","loading","projects","projectTypes","selecteProjectName","componentDidMount","get","then","response","pj","map","project","text","projectType","catch","error","render","showErrorMessage","length","uploadform"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport WebsiteUploadForm from \"./WebsiteUploadForm\";\nimport WindowUploadForm from \"./WindowUploadForm\";\nimport AndroidUploadForm from \"./AndroidUploadForm\";\nimport axios from \"axios\";\nimport {\n  Message,\n  TextArea,\n  Checkbox,\n  Button,\n  Form,\n  Select,\n  Input\n} from \"semantic-ui-react\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      projects: null,\n      projectTypes: null,\n      selectProjectType: \"\",\n      selecteProjectName: null,\n      selectLanguage: null,\n      selectLanguageVersion: null,\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: null,\n      dbVersion: null,\n      dbBackUpFile: null,\n      description: null,\n      downloadPermission: false,\n      androidDevice: null,\n      apiVersion: null,\n      androidVersion: null,\n      errorMessage: null\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:8080/supportLanguage\")\n      .then(response => {\n        // handle success\n        const pj = response.data;\n        this.setState({\n          loading: false,\n          projects: pj,\n          projectTypes: pj.projects.map(project => {\n            return { text: project.projectType, value: project.projectType };\n          }),\n          selectProjectType: \"Website\"\n        });\n        console.log(\"data fetched\", this.state.projectType);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      });\n  }\n\n  deviceOnChange = value => {\n    this.setState({ androidDevice: value });\n  };\n\n  androidVersionOnChange = value => {\n    this.setState({ androidVersion: value });\n  };\n\n  apiVersionOnChange = value => {\n    this.setState({ apiVersion: value });\n  };\n\n  projectTypeOnChange = (event, data) => {\n    this.setState({ selectProjectType: data.value });\n    this.reset();\n    console.log(data.value);\n  };\n\n  projectNameOnChange = (event, data) => {\n    this.setState({ selectProjectName: event.target.value });\n    console.log(this.state.selectProjectName);\n  };\n\n  languageOnChange = value => {\n    this.setState({ selectLanguage: value });\n  };\n\n  languageVersionOnChange = value => {\n    this.setState({ selectLanguageVersion: value });\n  };\n\n  projectFilesOnChange = value => {\n    this.setState({ projectFiles: value });\n  };\n\n  dbOnCheck = value => {\n    this.setState({ dbOnCheck: value });\n  };\n\n  dbOnChanage = value => {\n    this.setState({ dbLanguage: value });\n  };\n\n  dbVersionOnChange = value => {\n    this.setState({ dbVersion: value });\n  };\n\n  dbBackUpOnChange = value => {\n    this.setState({ dbBackUpFile: value });\n  };\n\n  descriptionOnChange = (e, data) => {\n    this.setState({ description: e.target.value });\n  };\n\n  downloadPermissionOnChange = (e, data) => {\n    this.setState({ downloadPermission: data.checked });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    console.log(\"On Submit worked !\");\n    console.log(this.state);\n    this.validateForm();\n  };\n\n  validateForm = () => {\n    let message = [];\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        message +=\n          this.state.selectLanguage == null\n            ? message.push(\"Language required.\")\n            : \"\";\n        message +=\n          this.state.selectLanguageVersion == null\n            ? message.push(\"Language version required.\")\n            : \"\";\n        message +=\n          this.state.projectFiles == null\n            ? message.push(\"Project files required.\")\n            : \"\";\n\n        if (this.state.dbOnCheck) {\n          message +=\n            this.state.dbLanguage == null\n              ? message.push(\"Database required.\")\n              : \"\";\n          message +=\n            this.state.dbVersion == null\n              ? message.push(\"Datbase version required.\")\n              : \"\";\n          message +=\n            this.state.dbBackUpFile == null\n              ? message.push(\".Sql backup required.\")\n              : \"\";\n        }\n        break;\n      case \"Window Application\":\n        message +=\n          this.state.selectLanguage == null\n            ? message.push(\"Language required.\")\n            : \"\";\n        message +=\n          this.state.selectLanguageVersion == null\n            ? message.push(\"Language version required.\")\n            : \"\";\n        message +=\n          this.state.projectFiles == null\n            ? message.push(\"Application file required.\")\n            : \"\";\n        break;\n      case \"Android Appliation\":\n        message +=\n          this.state.androidDevice == null\n            ? message.push(\"Device required.\")\n            : \"\";\n        message +=\n          this.state.apiVersion == null\n            ? message.push(\"API version required.\")\n            : \"\";\n        message +=\n          this.state.androidVersion == null\n            ? message.push(\"Android version required.\")\n            : \"\";\n        message +=\n          this.state.projectFiles == null\n            ? message.push(\"Application file required.\")\n            : \"\";\n    }\n    this.setState({ errorMessage: message });\n  };\n\n  reset = () => {\n    this.setState({\n      selectLanguage: null,\n      selectLanguageVersion: null,\n      projectFiles: null,\n      dbOnCheck: false,\n      dbLanguage: null,\n      dbVersion: null,\n      dbBackUpFile: null,\n      description: null,\n      downloadPermission: false,\n      androidDevice: null,\n      apiVersion: null,\n      androidVersion: null\n    });\n  };\n\n  render() {\n    //error message\n    let showErrorMessage = null;\n    if (this.state.errorMessage.length > 0) {\n      showErrorMessage = (\n        <Message\n          error\n          header=\"There was some errors with your submission\"\n          list={[\n            \"You must include both a upper and lower case letters in your password.\",\n            \"You need to select your home country.\"\n          ]}\n        />\n      );\n    } else {\n      showErrorMessage = null;\n    }\n\n    let uploadform;\n    switch (this.state.selectProjectType) {\n      case \"Website\":\n        uploadform = (\n          <WebsiteUploadForm\n            projectDetail={this.state.projects}\n            languageOnChange={this.languageOnChange}\n            languageVersionOnChange={this.languageVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n            dbOnCheck={this.dbOnCheck}\n            dbOnChange={this.dbOnChanage}\n            dbVersionOnChange={this.dbVersionOnChange}\n            dbBackUpOnChange={this.dbBackUpOnChange}\n          />\n        );\n        break;\n      case \"Window Application\":\n        uploadform = (\n          <WindowUploadForm\n            projectDetail={this.state.projects}\n            languageOnChange={this.languageOnChange}\n            languageVersionOnChange={this.languageVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n          />\n        );\n        break;\n      case \"Android Application\":\n        uploadform = (\n          <AndroidUploadForm\n            projectDetail={this.state.projects}\n            deviceOnChange={this.deviceOnChange}\n            apiVersionOnChange={this.apiVersionOnChange}\n            androidVersionOnChange={this.androidVersionOnChange}\n            projectFilesOnChange={this.projectFilesOnChange}\n          />\n        );\n        break;\n    }\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Field\n          fluid\n          control={Select}\n          label=\"Project Type\"\n          options={this.state.projectTypes}\n          placeholder=\"Project Type\"\n          onChange={this.projectTypeOnChange}\n        />\n        <Form.Field\n          inline\n          fluid\n          control={Input}\n          label=\"Project Name\"\n          placeholder=\"Name\"\n          onChange={this.projectNameOnChange}\n          required\n        />\n        {uploadform}\n        <Form.Field\n          control={TextArea}\n          label=\"About\"\n          placeholder=\"Tell something about your project ...\"\n          onChange={this.descriptionOnChange}\n          required\n        />\n        <Form.Field\n          control={Checkbox}\n          label=\"allow download\"\n          onChange={this.downloadPermissionOnChange}\n        />\n\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}